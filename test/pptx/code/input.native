Pandoc
  Meta { unMeta = fromList [] }
  [ Header
      1
      ( "header-with-inline-code" , [] , [] )
      [ Str "Header with " , Code ( "" , [] , [] ) "inline code" ]
  , CodeBlock ( "" , [] , [] ) "Code at level 0"
  , BulletList
      [ [ Para
            [ Str "Bullet item with "
            , Code ( "" , [] , [] ) "inline code"
            ]
        , CodeBlock ( "" , [] , [] ) "Code block at level 1"
        , BulletList
            [ [ Para [ Str "with " , Code ( "" , [] , [] ) "nested" ]
              , CodeBlock ( "" , [] , [] ) "lvl2\nlvl2\nlvl2"
              , Header
                  2
                  ( "second-heading-level-with-code" , [] , [] )
                  [ Str "Second heading level with "
                  , Code ( "" , [] , [] ) "code"
                  ]
              ]
            ]
        ]
      ]
  , Header
      1
      ( "syntax-highlighting" , [] , [] )
      [ Str "Syntax highlighting" ]
  , CodeBlock
      ( "" , [ "haskell" ] , [] ) "id :: a -> a\nid x = x"
  , BulletList
      [ [ Para [ Str "Nested" ]
        , CodeBlock
            ( "" , [ "haskell" ] , [] ) "g :: Int -> Int\ng x = x * 3"
        ]
      ]
  , Header
      1
      ( "two-column-slide" , [] , [] )
      [ Str "Two column slide" ]
  , Div
      ( "" , [ "columns" ] , [] )
      [ Div
          ( "" , [ "column" ] , [ ( "width" , "50%" ) ] )
          [ BulletList
              [ [ Plain
                    [ Str "A total alternative for "
                    , Code ( "" , [] , [] ) "head"
                    ]
                ]
              ]
          ]
      , Div
          ( "" , [ "column" ] , [ ( "width" , "50%" ) ] )
          [ CodeBlock
              ( "" , [] , [] )
              "safeHead :: [a] -> Maybe a\nsafeHead [] = Nothing\nsafeHead (x:_) = Just x"
          ]
      ]
  ]
