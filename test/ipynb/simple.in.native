Pandoc
  Meta
    { unMeta =
        fromList
          [ ( "jupyter"
            , MetaMap
                (fromList
                   [ ( "nbformat" , MetaInlines [ Str "4" ] )
                   , ( "nbformat_minor" , MetaInlines [ Str "5" ] )
                   ])
            )
          ]
    }
  [ Div
      ( "" , [ "cell" , "markdown" ] , [] )
      [ Header 1 ( "lorem-ipsum" , [] , [] ) [ Str "Lorem ipsum" ]
      , Para
          [ Strong [ Str "Lorem ipsum" ]
          , Str
              " dolor sit amet, consectetur adipiscing elit. Nunc luctus"
          , SoftBreak
          , Str "bibendum felis dictum sodales."
          ]
      ]
  , Div
      ( "" , [ "cell" , "code" ] , [] )
      [ CodeBlock ( "" , [ "python" ] , [] ) "print(\"hello\")" ]
  , Div
      ( "" , [ "cell" , "markdown" ] , [] )
      [ Header 2 ( "pyout" , [] , [] ) [ Str "Pyout" ] ]
  , Div
      ( ""
      , [ "cell" , "code" ]
      , [ ( "execution_count" , "2" ) ]
      )
      [ CodeBlock
          ( "" , [ "python" ] , [] )
          "from IPython.display import HTML\nHTML(\"\"\"\n<script>\nconsole.log(\"hello\");\n</script>\n<b>HTML</b>\n\"\"\")"
      , Div
          ( ""
          , [ "output" , "execute_result" ]
          , [ ( "execution_count" , "2" ) ]
          )
          [ RawBlock
              (Format "html")
              "<script>\nconsole.log(\"hello\");\n</script>\n<b>HTML</b>\nhello"
          ]
      ]
  , Div
      ( ""
      , [ "cell" , "markdown" ]
      , [ ( "tags" , "[\"foo\",\"bar\"]" ) ]
      )
      [ Header 2 ( "image" , [] , [] ) [ Str "Image" ]
      , Para
          [ Str "This image "
          , Image
              ( "" , [] , [] ) [ Str "the moon" ] ( "lalune.jpg" , "" )
          , Str " will be included as a cell"
          , SoftBreak
          , Str "attachment."
          ]
      ]
  ]
