Pandoc
  Meta
    { unMeta =
        fromList
          [ ( "author"
            , MetaList
                [ MetaInlines [ Str "Author One" ]
                , MetaInlines [ Str "Author Two" ]
                , MetaInlines [ Str "Author Three" ]
                , MetaInlines [ Str "Author Four" ]
                ]
            )
          , ( "title"
            , MetaInlines
                [ Str "Title"
                , SoftBreak
                , Str "spanning multiple lines"
                ]
            )
          ]
    }
  [ Header
      1
      ( "additional-markdown-reader-tests" , [] , [] )
      [ Str "Additional markdown reader tests" ]
  , Header
      2
      ( "blank-line-before-url-in-link-reference" , [] , [] )
      [ Str "Blank line before URL in link reference" ]
  , Para
      [ Link ( "" , [] , [] ) [ Str "foo" ] ( "/url" , "" )
      , Str " and "
      , Link ( "" , [] , [] ) [ Str "bar" ] ( "/url" , "title" )
      ]
  , Header
      2
      ( "raw-context-environments" , [] , [] )
      [ Str "Raw ConTeXt environments" ]
  , RawBlock (Format "tex") "\\placeformula \\startformula"
  , Para
      [ Str "L_{1} = L_{2}"
      , SoftBreak
      , RawInline (Format "tex") "\\stopformula"
      ]
  , RawBlock
      (Format "tex")
      "\\start[a2]\n\\start[a2]\n\\stop[a2]\n\\stop[a2]"
  , Header
      2
      ( "raw-latex-environments" , [] , [] )
      [ Str "Raw LaTeX environments" ]
  , RawBlock
      (Format "tex")
      "\\begin{center}\n\\begin{tikzpicture}[baseline={([yshift=+-.5ex]current bounding box.center)}, level distance=24pt]\n\\Tree [.{S} [.NP John\\index{i} ] [.VP [.V likes ] [.NP himself\\index{i,*j} ]]]\n\\end{tikzpicture}\n\\end{center}"
  , Header
      2
      ( "urls-with-spaces-and-punctuation" , [] , [] )
      [ Str "URLs with spaces and punctuation" ]
  , Para
      [ Link
          ( "" , [] , [] ) [ Str "foo" ] ( "/bar%20and%20baz" , "" )
      , SoftBreak
      , Link
          ( "" , [] , [] ) [ Str "foo" ] ( "/bar%20and%20baz" , "" )
      , SoftBreak
      , Link
          ( "" , [] , [] ) [ Str "foo" ] ( "/bar%20and%20baz" , "" )
      , SoftBreak
      , Link
          ( "" , [] , [] ) [ Str "foo" ] ( "bar%20baz" , "title" )
      ]
  , Para
      [ Link ( "" , [] , [] ) [ Str "baz" ] ( "/foo%20foo" , "" )
      , Str " "
      , Link ( "" , [] , [] ) [ Str "bam" ] ( "/foo%20fee" , "" )
      , Str " "
      , Link
          ( "" , [] , [] )
          [ Str "bork" ]
          ( "/foo/zee%20zob" , "title" )
      ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "Ward\8217s method." ]
          ( "http://en.wikipedia.org/wiki/Ward's_method" , "" )
      ]
  , Header
      2
      ( "horizontal-rules-with-spaces-at-end" , [] , [] )
      [ Str "Horizontal rules with spaces at end" ]
  , HorizontalRule
  , HorizontalRule
  , Header
      2
      ( "raw-html-before-header" , [] , [] )
      [ Str "Raw HTML before header" ]
  , Para
      [ RawInline (Format "html") "<a>"
      , RawInline (Format "html") "</a>"
      ]
  , Header 3 ( "my-header" , [] , [] ) [ Str "my header" ]
  , Header 2 ( "in-math" , [] , [] ) [ Str "$ in math" ]
  , Para [ Math InlineMath "\\$2 + \\$3" ]
  , Para
      [ Math InlineMath "x = \\text{the $n$th root of $y$}" ]
  , Para [ Str "This should not be math:" ]
  , Para [ Str "$PATH 90 $PATH" ]
  , Header
      2
      ( "commented-out-list-item" , [] , [] )
      [ Str "Commented-out list item" ]
  , BulletList
      [ [ Plain
            [ Str "one"
            , SoftBreak
            , RawInline (Format "html") "<!--\n- two\n-->"
            ]
        ]
      , [ Plain [ Str "three" ] ]
      ]
  , Header
      2
      ( "indented-code-at-beginning-of-list" , [] , [] )
      [ Str "Indented code at beginning of list" ]
  , BulletList
      [ [ CodeBlock ( "" , [] , [] ) "code\ncode"
        , OrderedList
            ( 1 , Decimal , Period )
            [ [ CodeBlock ( "" , [] , [] ) "code\ncode" ]
            , [ CodeBlock ( "" , [] , [] ) "code\ncode" ]
            ]
        , BulletList
            [ [ CodeBlock ( "" , [] , [] ) "code\ncode" ]
            , [ Plain [ Str "no code" ] ]
            ]
        ]
      ]
  , Header
      2
      ( "backslash-newline" , [] , [] )
      [ Str "Backslash newline" ]
  , Para [ Str "hi" , LineBreak , Str "there" ]
  , Header 2 ( "code-spans" , [] , [] ) [ Str "Code spans" ]
  , Para [ Code ( "" , [] , [] ) "hi\\" ]
  , Para [ Code ( "" , [] , [] ) "hi there" ]
  , Para [ Code ( "" , [] , [] ) "hi````there" ]
  , Para [ Str "`hi" ]
  , Para [ Str "there`" ]
  , Header
      2
      ( "multilingual-urls" , [] , [] )
      [ Str "Multilingual URLs" ]
  , Para
      [ Link
          ( "" , [ "uri" ] , [] )
          [ Str "http://\27979.com?\27979=\27979" ]
          ( "http://\27979.com?\27979=\27979" , "" )
      ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "foo" ]
          ( "/bar/\27979?x=\27979" , "title" )
      ]
  , Para
      [ Link
          ( "" , [ "email" ] , [] )
          [ Str "\27979@foo.\27979.baz" ]
          ( "mailto:\27979@foo.\27979.baz" , "" )
      ]
  , Header
      2
      ( "numbered-examples" , [] , [] )
      [ Str "Numbered examples" ]
  , OrderedList
      ( 1 , Example , TwoParens )
      [ [ Plain [ Str "First example." ] ]
      , [ Plain [ Str "Second example." ] ]
      ]
  , Para [ Str "Explanation of examples (2) and (3)." ]
  , OrderedList
      ( 3 , Example , TwoParens )
      [ [ Plain [ Str "Third example." ] ] ]
  , Header 2 ( "macros" , [] , [] ) [ Str "Macros" ]
  , RawBlock
      (Format "tex")
      "\\newcommand{\\tuple}[1]{\\langle #1 \\rangle}"
  , Para [ Math InlineMath "\\langle x,y \\rangle" ]
  , Header
      2
      ( "case-insensitive-references" , [] , [] )
      [ Str "Case-insensitive references" ]
  , Para
      [ Link ( "" , [] , [] ) [ Str "Fum" ] ( "/fum" , "" ) ]
  , Para
      [ Link ( "" , [] , [] ) [ Str "FUM" ] ( "/fum" , "" ) ]
  , Para
      [ Link ( "" , [] , [] ) [ Str "bat" ] ( "/bat" , "" ) ]
  , Header
      2
      ( "curly-smart-quotes" , [] , [] )
      [ Str "Curly smart quotes" ]
  , Para [ Quoted DoubleQuote [ Str "Hi" ] ]
  , Para [ Quoted SingleQuote [ Str "Hi" ] ]
  , Header
      2
      ( "consecutive-lists" , [] , [] )
      [ Str "Consecutive lists" ]
  , BulletList
      [ [ Plain [ Str "one" ] ] , [ Plain [ Str "two" ] ] ]
  , OrderedList
      ( 1 , Decimal , Period )
      [ [ Plain [ Str "one" ] ] , [ Plain [ Str "two" ] ] ]
  , OrderedList
      ( 1 , LowerAlpha , Period )
      [ [ Plain [ Str "one" ] ] , [ Plain [ Str "two" ] ] ]
  , Header
      2
      ( "implicit-header-references" , [] , [] )
      [ Str "Implicit header references" ]
  , Header 3 ( "my-header-1" , [] , [] ) [ Str "My header" ]
  , Header
      3 ( "my-other-header" , [] , [] ) [ Str "My other header" ]
  , Para
      [ Str "A link to "
      , Link
          ( "" , [] , [] ) [ Str "My header" ] ( "#my-header-1" , "" )
      , Str "."
      ]
  , Para
      [ Str "Another link to "
      , Link ( "" , [] , [] ) [ Str "it" ] ( "#my-header-1" , "" )
      , Str "."
      ]
  , Para
      [ Str "Should be "
      , Link
          ( "" , [] , [] )
          [ Str "case insensitive" ]
          ( "#my-header-1" , "" )
      , Str "."
      ]
  , Para
      [ Str "Link to "
      , Link
          ( "" , [] , [] )
          [ Str "Explicit header attributes" ]
          ( "#foobar" , "" )
      , Str "."
      ]
  , Para
      [ Str "But this is not a link to "
      , Link
          ( "" , [] , [] ) [ Str "My other header" ] ( "/foo" , "" )
      , Str ", since the reference is defined."
      ]
  , Header
      2
      ( "foobar" , [ "baz" ] , [ ( "key" , "val" ) ] )
      [ Str "Explicit header attributes" ]
  , BlockQuote
      [ Header
          2
          ( "foobar" , [ "baz" ] , [ ( "key" , "val" ) ] )
          [ Str "Header attributes inside block quote" ]
      ]
  , Header 2 ( "line-blocks" , [] , [] ) [ Str "Line blocks" ]
  , LineBlock
      [ [ Str "But can a bee be said to be" ]
      , [ Str "\160\160\160\160or not to be an entire bee," ]
      , [ Str
            "\160\160\160\160\160\160\160\160when half the bee is not a bee,"
        ]
      , [ Str
            "\160\160\160\160\160\160\160\160\160\160\160\160due to some ancient injury?"
        ]
      , []
      , [ Str "Continuation line" ]
      , [ Str "\160\160and another" ]
      ]
  , Header 2 ( "grid-tables" , [] , [] ) [ Str "Grid Tables" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignDefault , ColWidth 0.2638888888888889 )
      , ( AlignDefault , ColWidth 0.16666666666666666 )
      , ( AlignDefault , ColWidth 0.18055555555555555 )
      ]
      (TableHead
         ( "" , [] , [] )
         [ Row
             ( "" , [] , [] )
             [ Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "col 1" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "col 2" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "col 3" ] ]
             ]
         ])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r1 a" , SoftBreak , Str "r1 bis" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "b" , SoftBreak , Str "b 2" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "c" , SoftBreak , Str "c 2" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r2 d" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "e" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "f" ] ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Para [ Str "Headless" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignDefault , ColWidth 0.2638888888888889 )
      , ( AlignDefault , ColWidth 0.16666666666666666 )
      , ( AlignDefault , ColWidth 0.18055555555555555 )
      ]
      (TableHead ( "" , [] , [] ) [])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r1 a" , SoftBreak , Str "r1 bis" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "b" , SoftBreak , Str "b 2" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "c" , SoftBreak , Str "c 2" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r2 d" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "e" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "f" ] ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Para [ Str "With alignments" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignRight , ColWidth 0.2638888888888889 )
      , ( AlignLeft , ColWidth 0.16666666666666666 )
      , ( AlignCenter , ColWidth 0.18055555555555555 )
      ]
      (TableHead
         ( "" , [] , [] )
         [ Row
             ( "" , [] , [] )
             [ Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "col 1" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "col 2" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "col 3" ] ]
             ]
         ])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r1 a" , SoftBreak , Str "r1 bis" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "b" , SoftBreak , Str "b 2" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "c" , SoftBreak , Str "c 2" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r2 d" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "e" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "f" ] ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Para [ Str "Headless with alignments" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignRight , ColWidth 0.2638888888888889 )
      , ( AlignLeft , ColWidth 0.16666666666666666 )
      , ( AlignCenter , ColWidth 0.18055555555555555 )
      ]
      (TableHead ( "" , [] , [] ) [])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r1 a" , SoftBreak , Str "r1 bis" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "b" , SoftBreak , Str "b 2" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "c" , SoftBreak , Str "c 2" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r2 d" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "e" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "f" ] ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Para [ Str "Spaces at ends of lines" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignDefault , ColWidth 0.2638888888888889 )
      , ( AlignDefault , ColWidth 0.16666666666666666 )
      , ( AlignDefault , ColWidth 0.18055555555555555 )
      ]
      (TableHead ( "" , [] , [] ) [])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r1 a" , SoftBreak , Str "r1 bis" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "b" , SoftBreak , Str "b 2" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "c" , SoftBreak , Str "c 2" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r2 d" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "e" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "f" ] ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Para [ Str "Multiple blocks in a cell" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignDefault , ColWidth 0.2638888888888889 )
      , ( AlignDefault , ColWidth 0.16666666666666666 )
      , ( AlignDefault , ColWidth 0.18055555555555555 )
      ]
      (TableHead ( "" , [] , [] ) [])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Header 1 ( "col-1" , [] , [] ) [ Str "col 1" ]
                  , Plain [ Str "col 1" ]
                  ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Header 1 ( "col-2" , [] , [] ) [ Str "col 2" ]
                  , Plain [ Str "col 2" ]
                  ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Header 1 ( "col-3" , [] , [] ) [ Str "col 3" ]
                  , Plain [ Str "col 3" ]
                  ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Para [ Str "r1 a" ] , Para [ Str "r1 bis" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ BulletList
                      [ [ Plain [ Str "b" ] ]
                      , [ Plain [ Str "b 2" ] ]
                      , [ Plain [ Str "b 2" ] ]
                      ]
                  ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain
                      [ Str "c"
                      , SoftBreak
                      , Str "c 2"
                      , SoftBreak
                      , Str "c 2"
                      ]
                  ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Para [ Str "Empty cells" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignDefault , ColWidth 5.555555555555555e-2 )
      , ( AlignDefault , ColWidth 5.555555555555555e-2 )
      ]
      (TableHead ( "" , [] , [] ) [])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  []
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  []
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Header
      2
      ( "entities-in-links-and-titles" , [] , [] )
      [ Str "Entities in links and titles" ]
  , Para
      [ Link
          ( "" , [] , [] ) [ Str "link" ] ( "/\252rl" , "\246\246!" )
      ]
  , Para
      [ Link
          ( "" , [ "uri" ] , [] )
          [ Str "http://g\246\246gle.com" ]
          ( "http://g\246\246gle.com" , "" )
      ]
  , Para
      [ Link
          ( "" , [ "email" ] , [] )
          [ Str "me@ex\228mple.com" ]
          ( "mailto:me@ex\228mple.com" , "" )
      ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "foobar" ]
          ( "/\252rl" , "\246\246!" )
      ]
  , Header
      2
      ( "parentheses-in-urls" , [] , [] )
      [ Str "Parentheses in URLs" ]
  , Para
      [ Link ( "" , [] , [] ) [ Str "link" ] ( "/hi(there)" , "" )
      ]
  , Para
      [ Link ( "" , [] , [] ) [ Str "link" ] ( "/hithere)" , "" )
      ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "linky" ]
          ( "hi_(there_(nested))" , "" )
      ]
  , Header
      2
      ( "backslashes-in-link-references" , [] , [] )
      [ Str "Backslashes in link references" ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "*" , RawInline (Format "tex") "\\a" ]
          ( "b" , "" )
      ]
  , Header
      2
      ( "reference-link-fallbacks" , [] , [] )
      [ Str "Reference link fallbacks" ]
  , Para
      [ Str "["
      , Emph [ Str "not a link" ]
      , Str "] ["
      , Emph [ Str "nope" ]
      , Str "]\8230"
      ]
  , Header
      2
      ( "reference-link-followed-by-a-citation" , [] , [] )
      [ Str "Reference link followed by a citation" ]
  , Para
      [ Str "MapReduce is a paradigm popularized by "
      , Link
          ( "" , [] , [] )
          [ Str "Google" ]
          ( "http://google.com" , "" )
      , Str " "
      , Cite
          [ Citation
              { citationId = "mapreduce"
              , citationPrefix = []
              , citationSuffix = []
              , citationMode = NormalCitation
              , citationNoteNum = 2
              , citationHash = 0
              }
          ]
          [ Str "[@mapreduce]" ]
      , Str " as its"
      , SoftBreak
      , Str "most vocal proponent."
      ]
  , Header
      2
      ( "empty-reference-links" , [] , [] )
      [ Str "Empty reference links" ]
  , Para [ Str "bar" ]
  , Para [ Link ( "" , [] , [] ) [ Str "foo2" ] ( "" , "" ) ]
  , Header
      2
      ( "wrapping-shouldnt-introduce-new-list-items" , [] , [] )
      [ Str "Wrapping shouldn\8217t introduce new list items" ]
  , BulletList
      [ [ Plain
            [ Str
                "blah blah blah blah blah blah blah blah blah blah blah blah blah blah 2015."
            ]
        ]
      ]
  , Header
      2 ( "bracketed-spans" , [] , [] ) [ Str "Bracketed spans" ]
  , Para
      [ Span
          ( "id" , [ "class" ] , [ ( "key" , "val" ) ] )
          [ Emph [ Str "foo" ]
          , Str " bar baz "
          , Link ( "" , [] , [] ) [ Str "link" ] ( "url" , "" )
          ]
      ]
  ]
