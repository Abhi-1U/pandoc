Pandoc
  Meta
    { unMeta =
        fromList
          [ ( "date" , MetaInlines [ Str "2017-05-01" ] )
          , ( "title" , MetaInlines [ Str "title" ] )
          ]
    }
  [ Header
      1
      ( "implemented" , [] , [] )
      [ Emph
          [ Span ( "implemented" , [] , [] ) []
          , Strong [ Str "implemented" ]
          ]
      ]
  , Header 1 ( "header" , [] , [] ) [ Str "header" ]
  , Header
      2
      ( "header level two" , [] , [] )
      [ Str "header level two" ]
  , Header
      3
      ( "header level 3" , [] , [] )
      [ Str "header " , Code ( "" , [] , [] ) "level" , Str " 3" ]
  , Header
      4
      ( "header level four" , [] , [] )
      [ Str "header " , Strikeout [ Str "level" ] , Str " four" ]
  , Header
      5
      ( "header level 5" , [] , [] )
      [ Str "header "
      , Emph
          [ Span ( "level" , [] , [] ) []
          , Strong [ Str "level" ]
          , Str " 5"
          ]
      ]
  , Header
      6 ( "header level 6" , [] , [] ) [ Str "header level 6" ]
  , Para [ Str "======= not a header ========" ]
  , Para [ Str "hi== not a header ==" ]
  , Para [ Str "=== not a header ==" ]
  , Para [ Str "=== not a header ===-" ]
  , Para [ Str "not a header:" ]
  , Para [ Str "=n=" ]
  , Para [ Str "=== not a header ====" ]
  , Header
      2
      ( "centred header" , [ "justcenter" ] , [] )
      [ Str "centred header" ]
  , Header
      2
      ( "header with some == in between" , [] , [] )
      [ Str "header with some "
      , Code ( "" , [] , [] ) "=="
      , Str " in between"
      ]
  , Header
      2
      ( "header with some == in between" , [] , [] )
      [ Str "header with some == in between" ]
  , Header
      2
      ( "header with some ==in between" , [] , [] )
      [ Str "header with some ==in between" ]
  , Header
      2
      ( "emph strong and strikeout" , [] , [] )
      [ Str "emph strong and strikeout" ]
  , Para
      [ Emph [ Str "emph" ]
      , Str " "
      , Span ( "strong" , [] , [] ) []
      , Strong [ Str "strong" ]
      ]
  , Para
      [ Span ( "strong and emph" , [] , [] ) []
      , Strong [ Emph [ Str "strong and emph" ] ]
      ]
  , Para
      [ Emph
          [ Span ( "emph and strong" , [] , [] ) []
          , Strong [ Str "emph and strong" ]
          ]
      ]
  , Para
      [ Span ( "emph inside strong" , [] , [] ) []
      , Strong [ Emph [ Str "emph inside" ] , Str " strong" ]
      ]
  , Para
      [ Span ( "strong with emph" , [] , [] ) []
      , Strong [ Str "strong with " , Emph [ Str "emph" ] ]
      ]
  , Para
      [ Emph
          [ Span ( "strong inside" , [] , [] ) []
          , Strong [ Str "strong inside" ]
          , Str " emph"
          ]
      ]
  , Para
      [ Emph
          [ Strikeout [ Str "strikeout" ] , Str " inside emph" ]
      ]
  , Para
      [ Strikeout
          [ Str "This is "
          , Emph [ Str "struck out" ]
          , Str " with emph"
          ]
      ]
  , Para [ Str "*not" , SoftBreak , Str "strong*" ]
  , Para [ Str "just two stars: **" ]
  , Para [ Str "just two underscores: __" ]
  , Para [ Str "just four ~s: ~~~~" ]
  , Para [ Str "_not" , SoftBreak , Str "emph_" ]
  , Para [ Str "~~not" , SoftBreak , Str "strikeout~~" ]
  , Header
      2 ( "horizontal rule" , [] , [] ) [ Str "horizontal rule" ]
  , Para [ Str "top" ]
  , HorizontalRule
  , Para [ Str "middle" ]
  , HorizontalRule
  , Para [ Str "not a rule-----" ]
  , Para
      [ Str "not a rule (trailing spaces):"
      , SoftBreak
      , Str "-----"
      ]
  , Para
      [ Str "not a rule (leading spaces):"
      , SoftBreak
      , Str "----"
      ]
  , Header 2 ( "comments" , [] , [] ) [ Str "comments" ]
  , Para [ Str "this" , SoftBreak , Str "is %% not secret" ]
  , Header 2 ( "inline code" , [] , [] ) [ Str "inline code" ]
  , Para
      [ Str "Here is some "
      , Code ( "" , [] , [] ) "inline code"
      , Str "."
      ]
  , Para [ Str "Just two backticks: ``" ]
  , Header
      2
      ( "preformatted text" , [] , [] )
      [ Str "preformatted text" ]
  , CodeBlock
      ( "" , [] , [] )
      "  Tyger! Tyger! burning bright\n   In the forests of the night,\n    What immortal hand or eye\n     Could frame thy fearful symmetry?\n  In what distant deeps or skies\n   Burnt the fire of thine eyes?\n    On what wings dare he aspire?\n     What the hand dare sieze the fire?"
  , Header
      3
      ( "preformatted text with attributes" , [] , [] )
      [ Str "preformatted text with attributes" ]
  , CodeBlock
      ( ""
      , []
      , [ ( "class" , "python" ) , ( "style" , "color:blue" ) ]
      )
      " for i in range(1, 5):\n     print(i)"
  , Header
      3
      ( "preformatted text with nested syntax" , [] , [] )
      [ Str "preformatted text with nested syntax" ]
  , CodeBlock ( "" , [ "sql" ] , [] ) "SELECT * FROM table"
  , Header
      3
      ( "empty preformatted text" , [] , [] )
      [ Str "empty preformatted text" ]
  , CodeBlock ( "" , [] , [] ) ""
  , Header
      2 ( "block quotes" , [] , [] ) [ Str "block quotes" ]
  , BlockQuote
      [ Plain
          [ Str
              "(indentation 4 spaces) This would be a blockquote in Vimwiki. It is not "
          , Span ( "highlighted" , [] , [] ) []
          , Strong [ Str "highlighted" ]
          , Str " in Vim but"
          , SoftBreak
          , Str
              "(indentation 1 space followed by 1 tab of width 4) could be styled by CSS in HTML. Blockquotes are usually used to quote a"
          , SoftBreak
          , Str
              "(indentation 1 tab of width 4) long piece of text from another source. "
          , Strikeout [ Str "blah blah" ]
          , Str " "
          , Span ( "-blockquote" , [] , [] ) [ Str "" ]
          , Span
              ( "blockquote" , [ "tag" ] , [] ) [ Str "blockquote" ]
          ]
      ]
  , Header
      2 ( "external links" , [] , [] ) [ Str "external links" ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Emph [ Str "Google" ] , Str " search engine" ]
          ( "http://google.com" , "" )
      ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "http://pandoc.org" ]
          ( "http://pandoc.org" , "" )
      ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "ftp://vim.org" ]
          ( "ftp://vim.org" , "" )
      ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "http://google.com" ]
          ( "http://google.com" , "" )
      ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "email me" ]
          ( "mailto:info@example.org" , "" )
      ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "mailto:hello@bye.com" ]
          ( "mailto:hello@bye.com" , "" )
      ]
  , Header
      2 ( "internal links" , [] , [] ) [ Str "internal links" ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "This is a link" ]
          ( "This is a link" , "wikilink" )
      ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "Description of the link" ]
          ( "This is a link source" , "wikilink" )
      ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "projects/Important Project 1" ]
          ( "projects/Important Project 1" , "wikilink" )
      , SoftBreak
      , Link
          ( "" , [] , [] )
          [ Str "../index" ]
          ( "../index" , "wikilink" )
      , SoftBreak
      , Link
          ( "" , [] , [] )
          [ Str "Other files" ]
          ( "a subdirectory/" , "wikilink" )
      ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "try me to test tag anchors" ]
          ( "#tag-one" , "wikilink" )
      ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "try me to test header anchors" ]
          ( "#block quotes" , "wikilink" )
      ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "try me to test strong anchors" ]
          ( "#strong" , "wikilink" )
      ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "Tasks for tomorrow" ]
          ( "Todo List#Tomorrow" , "wikilink" )
      ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "diary:2017-05-01" ]
          ( "diary/2017-05-01" , "wikilink" )
      ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "Important Data" ]
          ( "file:../assets/data.csv" , "" )
      ]
  , Header
      3
      ( "links with thumbnails" , [] , [] )
      [ Str "links with thumbnails" ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Image ( "" , [] , [] ) [ Str "" ] ( "./movie.jpg" , "" ) ]
          ( "http://www.google.com" , "" )
      ]
  , Header 2 ( "images" , [] , [] ) [ Str "images" ]
  , Para
      [ Image
          ( "" , [] , [] ) [ Str "" ] ( "file:./lalune.jpg" , "" )
      ]
  , Para
      [ Image
          ( "" , [] , [] )
          [ Str "Vimwiki" ]
          ( "http://vimwiki.googlecode.com/hg/images/vimwiki_logo.png"
          , ""
          )
      , SoftBreak
      , Image
          ( "" , [] , [] ) [ Str "" ] ( "file:./movie.jpg" , "" )
      ]
  , Header
      3
      ( "image with attributes" , [] , [] )
      [ Str "image with attributes" ]
  , Para
      [ Image
          ( "" , [] , [ ( "style" , "width:150px;height:120px;" ) ] )
          [ Emph [ Str "cool stuff" ] ]
          ( "lalune.jpg" , "" )
      ]
  , Para
      [ Image
          ( "" , [] , [ ( "style" , "font-color:red" ) ] )
          [ Span ( "Non-existing" , [] , [] ) []
          , Strong [ Str "Non-existing" ]
          , Str " image"
          ]
          ( "nonexist.jpg" , "" )
      ]
  , Para
      [ Image
          ( "" , [] , [ ( "style" , "width:150px;height:120px;" ) ] )
          [ Emph [ Str "cool stuff" ] ]
          ( "lalune.jpg" , "" )
      ]
  , Header 2 ( "lists" , [] , [] ) [ Str "lists" ]
  , OrderedList
      ( 1 , DefaultStyle , DefaultDelim )
      [ [ Plain
            [ Str
                "ordered list item 1, and here is some math belonging to list item 1"
            ]
        , Para [ Math DisplayMath "a^2 + b^2 = c^2" ]
        , Plain
            [ Str
                "and some preformatted and tables belonging to item 1 as well"
            ]
        , CodeBlock ( "" , [] , [] ) "I'm part of item 1."
        , Table
            ( "" , [] , [] )
            (Caption Nothing [])
            [ ( AlignDefault , ColWidthDefault )
            , ( AlignDefault , ColWidthDefault )
            ]
            (TableHead
               ( "" , [] , [] )
               [ Row
                   ( "" , [] , [] )
                   [ Cell
                       ( "" , [] , [] )
                       AlignDefault
                       (RowSpan 1)
                       (ColSpan 1)
                       []
                   , Cell
                       ( "" , [] , [] )
                       AlignDefault
                       (RowSpan 1)
                       (ColSpan 1)
                       []
                   ]
               ])
            [ TableBody
                ( "" , [] , [] )
                (RowHeadColumns 0)
                []
                [ Row
                    ( "" , [] , [] )
                    [ Cell
                        ( "" , [] , [] )
                        AlignDefault
                        (RowSpan 1)
                        (ColSpan 1)
                        [ Plain [ Str "this table" ] ]
                    , Cell
                        ( "" , [] , [] )
                        AlignDefault
                        (RowSpan 1)
                        (ColSpan 1)
                        [ Plain [ Str "is" ] ]
                    ]
                , Row
                    ( "" , [] , [] )
                    [ Cell
                        ( "" , [] , [] )
                        AlignDefault
                        (RowSpan 1)
                        (ColSpan 1)
                        [ Plain [ Str "also a part" ] ]
                    , Cell
                        ( "" , [] , [] )
                        AlignDefault
                        (RowSpan 1)
                        (ColSpan 1)
                        [ Plain [ Str "of item 1" ] ]
                    ]
                ]
            ]
            (TableFoot ( "" , [] , [] ) [])
        , Plain [ Str "and some more text belonging to item 1." ]
        ]
      , [ Plain [ Str "ordered list item 2" ] ]
      ]
  , BulletList
      [ [ Plain [ Str "Bulleted list item 1" ] ]
      , [ Plain [ Str "Bulleted list item 2" ] ]
      ]
  , OrderedList
      ( 1 , DefaultStyle , DefaultDelim )
      [ [ Plain [ Str "Bulleted list item 1" ] ]
      , [ Plain
            [ Str "the # become numbers when converted to HTML" ]
        ]
      ]
  , BulletList
      [ [ Plain [ Str "Bulleted list item 1" ] ]
      , [ Plain [ Str "Bulleted list item 2" ] ]
      ]
  , BulletList
      [ [ Plain [ Str "Item 1" ] ]
      , [ Plain [ Str "Item 2" ]
        , OrderedList
            ( 1 , DefaultStyle , DefaultDelim )
            [ [ Plain
                  [ Str "Sub item 1 (indentation 4 spaces)"
                  , SoftBreak
                  , Str "Sub item 1 continued line."
                  , SoftBreak
                  , Str "Sub item 1 next continued line."
                  ]
              ]
            , [ Plain
                  [ Str
                      "Sub item 2, as an ordered list item even though the identifier is "
                  , Code ( "" , [] , [] ) "*"
                  , Str
                      " (indentation 2 spaces followed by one tab of width 4)"
                  ]
              ]
            , [ Plain
                  [ Str "etc."
                  , SoftBreak
                  , Str "Continuation of Item 2"
                  , SoftBreak
                  , Str "Next continuation of Item 2"
                  ]
              ]
            ]
        ]
      ]
  , Para [ Str "But this is a new paragraph." ]
  , OrderedList
      ( 1 , DefaultStyle , DefaultDelim )
      [ [ Plain [ Str "1" ]
        , BulletList [ [ Plain [ Code ( "" , [] , [] ) "1.1" ] ] ]
        ]
      , [ Plain [ Str "2" ]
        , BulletList [ [ Plain [ Str "2.1" ] ] ]
        ]
      ]
  , BulletList [ [ Plain [ Str "3" ] ] ]
  , Header
      3
      ( "ordered lists with non-# identifiers" , [] , [] )
      [ Str "ordered lists with non-# identifiers" ]
  , OrderedList
      ( 1 , DefaultStyle , DefaultDelim )
      [ [ Plain [ Str "Numbered list item 1" ] ]
      , [ Plain [ Str "Numbered list item 2" ] ]
      , [ Plain [ Str "Numbered list item 3" ] ]
      ]
  , OrderedList
      ( 1 , DefaultStyle , DefaultDelim )
      [ [ Plain [ Str "Numbered list item 1" ] ]
      , [ Plain [ Str "Numbered list item 2" ] ]
      , [ Plain [ Str "Numbered list item 3" ] ]
      ]
  , OrderedList
      ( 1 , DefaultStyle , DefaultDelim )
      [ [ Plain [ Str "Numbered list item 1" ] ]
      , [ Plain [ Str "Numbered list item 2" ] ]
      , [ Plain [ Str "Numbered list item 3" ] ]
      ]
  , OrderedList
      ( 1 , DefaultStyle , DefaultDelim )
      [ [ Plain [ Str "Numbered list item 1" ] ]
      , [ Plain [ Str "Numbered list item 2" ] ]
      , [ Plain [ Str "Numbered list item 3" ] ]
      ]
  , OrderedList
      ( 1 , DefaultStyle , DefaultDelim )
      [ [ Plain [ Str "Numbered list item 1" ] ]
      , [ Plain [ Str "Numbered list item 2" ] ]
      , [ Plain [ Str "Numbered list item 3" ] ]
      ]
  , OrderedList
      ( 1 , DefaultStyle , DefaultDelim )
      [ [ Plain [ Str "Numbered list item 1" ] ]
      , [ Plain [ Str "Numbered list item 2" ] ]
      , [ Plain [ Str "Numbered list item 3" ] ]
      ]
  , OrderedList
      ( 1 , DefaultStyle , DefaultDelim )
      [ [ Plain [ Str "Numbered list item 1" ] ]
      , [ Plain [ Str "Numbered list item 2" ] ]
      , [ Plain [ Str "Numbered list item 3" ] ]
      ]
  , BulletList
      [ [ Plain [ Str "Bulleted list item 1" ] ]
      , [ Plain [ Str "Bulleted list item 2" ]
        , OrderedList
            ( 1 , DefaultStyle , DefaultDelim )
            [ [ Plain [ Str "Numbered list sub item 1" ] ]
            , [ Plain [ Str "more ..." ]
              , BulletList
                  [ [ Plain [ Str "and more ..." ] ]
                  , [ Plain [ Str "..." ] ]
                  ]
              ]
            , [ Plain [ Str "Numbered list sub item 3" ]
              , OrderedList
                  ( 1 , DefaultStyle , DefaultDelim )
                  [ [ Plain [ Str "Numbered list sub sub item 1" ] ]
                  , [ Plain [ Str "Numbered list sub sub item 2" ] ]
                  ]
              ]
            , [ Plain [ Str "etc." ] ]
            ]
        ]
      , [ Plain [ Str "Bulleted list item 3" ] ]
      ]
  , Header 2 ( "todo lists" , [] , [] ) [ Str "todo lists" ]
  , BulletList
      [ [ Plain
            [ Span ( "" , [ "done0" ] , [] ) [] , Str "task 1" ]
        , OrderedList
            ( 1 , DefaultStyle , DefaultDelim )
            [ [ Plain [ Span ( "" , [ "done1" ] , [] ) [] , Str "5" ] ]
            ]
        ]
      , [ Plain [ Span ( "" , [ "done2" ] , [] ) [] , Str "3" ] ]
      , [ Plain [ Str "[] not a todo item" ] ]
      , [ Plain [ Str "[ ]not a todo item" ] ]
      , [ Plain [ Str "[r] not a todo item" ] ]
      , [ Plain [ Str "[ ] not a todo item" ] ]
      , [ Plain
            [ Span ( "" , [ "done2" ] , [] ) []
            , Str "a tab in the todo list marker "
            , Code ( "" , [] , [] ) "[ ]"
            ]
        , OrderedList
            ( 1 , DefaultStyle , DefaultDelim )
            [ [ Plain
                  [ Span ( "" , [ "done3" ] , [] ) []
                  , Str "4"
                  , SoftBreak
                  , Str "5"
                  ]
              ]
            , [ Plain [ Span ( "" , [ "done4" ] , [] ) [] ]
              , Table
                  ( "" , [] , [] )
                  (Caption Nothing [])
                  [ ( AlignDefault , ColWidthDefault )
                  , ( AlignDefault , ColWidthDefault )
                  ]
                  (TableHead
                     ( "" , [] , [] )
                     [ Row
                         ( "" , [] , [] )
                         [ Cell
                             ( "" , [] , [] )
                             AlignDefault
                             (RowSpan 1)
                             (ColSpan 1)
                             []
                         , Cell
                             ( "" , [] , [] )
                             AlignDefault
                             (RowSpan 1)
                             (ColSpan 1)
                             []
                         ]
                     ])
                  [ TableBody
                      ( "" , [] , [] )
                      (RowHeadColumns 0)
                      []
                      [ Row
                          ( "" , [] , [] )
                          [ Cell
                              ( "" , [] , [] )
                              AlignDefault
                              (RowSpan 1)
                              (ColSpan 1)
                              [ Plain [ Str "a" ] ]
                          , Cell
                              ( "" , [] , [] )
                              AlignDefault
                              (RowSpan 1)
                              (ColSpan 1)
                              [ Plain [ Str "b" ] ]
                          ]
                      ]
                  ]
                  (TableFoot ( "" , [] , [] ) [])
              ]
            ]
        ]
      , [ Plain
            [ Span ( "" , [ "done4" ] , [] ) [] , Str "task 2" ]
        ]
      ]
  , Header 2 ( "math" , [] , [] ) [ Str "math" ]
  , Para [ Math InlineMath " \\sum_i a_i^2 = 1 " ]
  , Para [ Math DisplayMath "\\sum_i a_i^2\n=\n1" ]
  , Para
      [ Math
          DisplayMath
          "\\begin{aligned}\n\\sum_i a_i^2 &= 1 + 1 \\\\\n&= 2.\n\\end{aligned}"
      ]
  , Para
      [ Str "edge case (the "
      , Code ( "" , [] , [] ) "c^2 + "
      , Str " after the multline tag is in the equation):"
      ]
  , Para
      [ Math
          DisplayMath
          "\\begin{gathered}\nc^2 + \na^2 + b^2\n\\end{gathered}"
      ]
  , Para
      [ Str "edge case (the tag is "
      , Code ( "" , [] , [] ) "hello%bye"
      , Str ")"
      ]
  , Para
      [ Math
          DisplayMath
          "\\begin{hello%bye}\n\\int_a^b f(x) dx\n\\end{hello%bye}"
      ]
  , Para [ Str "Just two dollar signs: $$" ]
  , Para
      [ Str "[not math] You have $1"
      , SoftBreak
      , Str "and I have $1."
      ]
  , Header 2 ( "tags" , [] , [] ) [ Str "tags" ]
  , Para
      [ Span ( "-tag-one" , [] , [] ) [ Str "" ]
      , Span ( "tag-one" , [ "tag" ] , [] ) [ Str "tag-one" ]
      , Str " "
      , Span ( "-tag-two" , [] , [] ) [ Str "" ]
      , Span ( "tag-two" , [ "tag" ] , [] ) [ Str "tag-two" ]
      ]
  , Header 2 ( "tables" , [] , [] ) [ Str "tables" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignDefault , ColWidthDefault )
      , ( AlignDefault , ColWidthDefault )
      , ( AlignDefault , ColWidthDefault )
      ]
      (TableHead
         ( "" , [] , [] )
         [ Row
             ( "" , [] , [] )
             [ Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Year" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Temperature (low)" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Temperature (high)" ] ]
             ]
         ])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1900" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "-10" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "25" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1910" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "-15" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "30" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1920" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "-10" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "32" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1930" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Emph [ Str "N/A" ] ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Emph [ Str "N/A" ] ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1940" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "-2" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "40" ] ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Header
      3
      ( "centered headerless tables" , [] , [] )
      [ Str "centered headerless tables" ]
  , Div
      ( "" , [ "center" ] , [] )
      [ Table
          ( "" , [] , [] )
          (Caption Nothing [])
          [ ( AlignDefault , ColWidthDefault )
          , ( AlignDefault , ColWidthDefault )
          ]
          (TableHead
             ( "" , [] , [] )
             [ Row
                 ( "" , [] , [] )
                 [ Cell
                     ( "" , [] , [] )
                     AlignDefault
                     (RowSpan 1)
                     (ColSpan 1)
                     []
                 , Cell
                     ( "" , [] , [] )
                     AlignDefault
                     (RowSpan 1)
                     (ColSpan 1)
                     []
                 ]
             ])
          [ TableBody
              ( "" , [] , [] )
              (RowHeadColumns 0)
              []
              [ Row
                  ( "" , [] , [] )
                  [ Cell
                      ( "" , [] , [] )
                      AlignDefault
                      (RowSpan 1)
                      (ColSpan 1)
                      [ Plain [ Str "a" ] ]
                  , Cell
                      ( "" , [] , [] )
                      AlignDefault
                      (RowSpan 1)
                      (ColSpan 1)
                      [ Plain [ Str "b" ] ]
                  ]
              , Row
                  ( "" , [] , [] )
                  [ Cell
                      ( "" , [] , [] )
                      AlignDefault
                      (RowSpan 1)
                      (ColSpan 1)
                      [ Plain [ Str "c" ] ]
                  , Cell
                      ( "" , [] , [] )
                      AlignDefault
                      (RowSpan 1)
                      (ColSpan 1)
                      [ Plain [ Str "d" ] ]
                  ]
              ]
          ]
          (TableFoot ( "" , [] , [] ) [])
      ]
  , Header 2 ( "paragraphs" , [] , [] ) [ Str "paragraphs" ]
  , Para
      [ Str "This is first paragraph"
      , SoftBreak
      , Str "with two lines."
      ]
  , Para
      [ Str "This is a second paragraph with"
      , SoftBreak
      , Str "two lines after many blank lines."
      ]
  , Header
      2 ( "definition list" , [] , [] ) [ Str "definition list" ]
  , DefinitionList
      [ ( [ Str "Term 1" ]
        , [ [ Plain [ Str "Definition 1" ] ] ]
        )
      , ( [ Str "Term 2" ]
        , [ [ Plain [ Str "Definition 2" ] ]
          , [ Plain [ Str "Definition 3" ] ]
          ]
        )
      , ( [ Str "Term :: "
          , Span ( "separated" , [] , [] ) []
          , Strong [ Str "separated" ]
          , Str " by :: "
          , Emph [ Str "double colons" ]
          ]
        , [ [ Plain [ Str "Def1" ] ] , [ Plain [ Str "Def2" ] ] ]
        )
      , ( [ Str "Term with lots of trailing colons:::::::" ]
        , [ [ Plain [ Str "Definition" ] ] ]
        )
      , ( [ Str ":: This is :: A term (rather than a definition)"
          ]
        , [ [ Plain [ Str "and this is a definition" ] ] ]
        )
      , ( [ Str "Term Without definitions" ] , [ [] ] )
      , ( [ Str "Part :: of :: dt" ]
        , [ [ Plain [ Str "part of ::dd" ] ] ]
        )
      ]
  , DefinitionList
      [ ( []
        , [ [ Plain [ Str "Definition 1 without a term" ] ]
          , [ Plain [ Str "Definition 2 without a term" ] ]
          ]
        )
      ]
  , DefinitionList
      [ ( [ Str "T1" ] , [ [ Plain [ Str "D1" ] ] ] ) ]
  , Para [ Str "new paragraph" ]
  , DefinitionList
      [ ( [ Str "T1" ] , [ [ Plain [ Str "D1" ] ] ] ) ]
  , Para [ Str "Not::Definition" ]
  , Para [ Str "Not ::Definition" ]
  , Para [ Str "::Not definition" ]
  , BlockQuote [ Plain [ Str ":: blockquote" ] ]
  , BlockQuote [ Plain [ Str "block :: quote" ] ]
  , Header
      2
      ( "metadata placeholders" , [] , [] )
      [ Str "metadata placeholders" ]
  , Para [ Str "%this is not a placeholder" ]
  , Para
      [ Str "placeholders"
      , SoftBreak
      , Str "serves as space / softbreak in paragraphs"
      ]
  , Header 2 ( "sup, sub" , [] , [] ) [ Str "sup, sub" ]
  , Para [ Str "super" , Superscript [ Str "script" ] ]
  , Para [ Str "sub" , Subscript [ Str "script" ] ]
  , Header
      2 ( "the todo mark" , [] , [] ) [ Str "the todo mark" ]
  , Para [ Span ( "" , [ "todo" ] , [] ) [ Str "TODO:" ] ]
  , Header
      1
      ( "not implemented yet" , [] , [] )
      [ Emph
          [ Span ( "not implemented yet" , [] , [] ) []
          , Strong [ Str "not implemented yet" ]
          ]
      ]
  , Header
      2
      ( "tables with spans" , [] , [] )
      [ Str "tables with spans" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignDefault , ColWidthDefault )
      , ( AlignDefault , ColWidthDefault )
      , ( AlignDefault , ColWidthDefault )
      , ( AlignDefault , ColWidthDefault )
      ]
      (TableHead
         ( "" , [] , [] )
         [ Row
             ( "" , [] , [] )
             [ Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 []
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 []
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 []
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 []
             ]
         ])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "a" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "b" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "c" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "d" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "\\/" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "e" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str ">" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "f" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "\\/" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "\\/" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str ">" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "g" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "h" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str ">" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str ">" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str ">" ] ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Header
      2
      ( "tables with multiple lines of headers" , [] , [] )
      [ Str "tables with multiple lines of headers" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignDefault , ColWidthDefault )
      , ( AlignDefault , ColWidthDefault )
      ]
      (TableHead
         ( "" , [] , [] )
         [ Row
             ( "" , [] , [] )
             [ Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 []
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 []
             ]
         ])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "a" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "b" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "c" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "d" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "---" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "---" ] ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Header
      2
      ( "some other placeholders" , [] , [] )
      [ Str "some other placeholders" ]
  , Para
      [ Code ( "" , [] , [] ) "template"
      , Str " placeholder is ignored."
      ]
  , Para
      [ Code ( "" , [] , [] ) "nohtml"
      , Str " placeholder is ignored."
      ]
  ]
