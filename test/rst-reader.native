Pandoc
  Meta
    { unMeta =
        fromList
          [ ( "author"
            , MetaList
                [ MetaInlines [ Str "John MacFarlane" ]
                , MetaInlines [ Str "Anonymous" ]
                ]
            )
          , ( "date" , MetaInlines [ Str "July 17, 2006" ] )
          , ( "revision" , MetaBlocks [ Para [ Str "3" ] ] )
          , ( "subtitle" , MetaInlines [ Str "Subtitle" ] )
          , ( "title" , MetaInlines [ Str "Pandoc Test Suite" ] )
          ]
    }
  [ Header
      1 ( "level-one-header" , [] , [] ) [ Str "Level one header" ]
  , Para
      [ Str
          "This is a set of tests for pandoc. Most of them are adapted from"
      , SoftBreak
      , Str "John Gruber\8217s markdown test suite."
      ]
  , Header
      2 ( "level-two-header" , [] , [] ) [ Str "Level two header" ]
  , Header 3 ( "level-three" , [] , [] ) [ Str "Level three" ]
  , Header
      4
      ( "level-four-with-emphasis" , [] , [] )
      [ Str "Level four with " , Emph [ Str "emphasis" ] ]
  , Header 5 ( "level-five" , [] , [] ) [ Str "Level five" ]
  , Header 1 ( "paragraphs" , [] , [] ) [ Str "Paragraphs" ]
  , Para [ Str "Here\8217s a regular paragraph." ]
  , Para
      [ Str "In Markdown 1.0.0 and earlier. Version"
      , SoftBreak
      , Str "8. This line turns into a list item."
      , SoftBreak
      , Str "Because a hard-wrapped line in the"
      , SoftBreak
      , Str "middle of a paragraph looked like a"
      , SoftBreak
      , Str "list item."
      ]
  , Para
      [ Str "Here\8217s one with a bullet."
      , SoftBreak
      , Str "* criminey."
      ]
  , Para [ Str "Horizontal rule:" ]
  , HorizontalRule
  , Para [ Str "Another:" ]
  , HorizontalRule
  , Header 1 ( "block-quotes" , [] , [] ) [ Str "Block Quotes" ]
  , Para [ Str "Here\8217s a block quote:" ]
  , BlockQuote
      [ Para
          [ Str "This is a block quote."
          , SoftBreak
          , Str "It is pretty short."
          ]
      ]
  , Para [ Str "Here\8217s another, differently indented:" ]
  , BlockQuote
      [ Para
          [ Str "This is a block quote."
          , SoftBreak
          , Str "It\8217s indented with a tab."
          ]
      , Para [ Str "Code in a block quote:" ]
      , CodeBlock
          ( "" , [] , [] ) "sub status {\n    print \"working\";\n}"
      , Para [ Str "List in a block quote:" ]
      , OrderedList
          ( 1 , Decimal , Period )
          [ [ Plain [ Str "item one" ] ] , [ Plain [ Str "item two" ] ] ]
      , Para [ Str "Nested block quotes:" ]
      , BlockQuote
          [ Para [ Str "nested" ] , BlockQuote [ Para [ Str "nested" ] ] ]
      ]
  , Header 1 ( "code-blocks" , [] , [] ) [ Str "Code Blocks" ]
  , Para [ Str "Code:" ]
  , CodeBlock
      ( "" , [] , [] )
      "---- (should be four hyphens)\n\nsub status {\n    print \"working\";\n}"
  , CodeBlock
      ( "" , [] , [] ) "this code block is indented by one tab"
  , Para [ Str "And:" ]
  , CodeBlock
      ( "" , [] , [] )
      "this block is indented by two tabs\n\nThese should not be escaped:  \\$ \\\\ \\> \\[ \\{"
  , Para [ Str "And:" ]
  , CodeBlock
      ( "" , [ "python" ] , [] ) "def my_function(x):\n    return x + 1"
  , Para
      [ Str
          "If we use the highlight directive, we can specify a default language"
      , SoftBreak
      , Str "for literate blocks."
      ]
  , CodeBlock
      ( "" , [ "haskell" ] , [] )
      "-- this code is in haskell\ndata Tree = Leaf | Node Tree Tree"
  , CodeBlock
      ( "" , [ "haskell" ] , [] )
      "-- this code is in haskell too\ndata Nat = Zero | Succ Nat"
  , CodeBlock
      ( "" , [ "javascript" ] , [] )
      "-- this code is in javascript\nlet f = (x, y) => x + y"
  , Header 1 ( "lists" , [] , [] ) [ Str "Lists" ]
  , Header 2 ( "unordered" , [] , [] ) [ Str "Unordered" ]
  , Para [ Str "Asterisks tight:" ]
  , BulletList
      [ [ Plain [ Str "asterisk 1" ] ]
      , [ Plain [ Str "asterisk 2" ] ]
      , [ Plain [ Str "asterisk 3" ] ]
      ]
  , Para [ Str "Asterisks loose:" ]
  , BulletList
      [ [ Plain [ Str "asterisk 1" ] ]
      , [ Plain [ Str "asterisk 2" ] ]
      , [ Plain [ Str "asterisk 3" ] ]
      ]
  , Para [ Str "Pluses tight:" ]
  , BulletList
      [ [ Plain [ Str "Plus 1" ] ]
      , [ Plain [ Str "Plus 2" ] ]
      , [ Plain [ Str "Plus 3" ] ]
      ]
  , Para [ Str "Pluses loose:" ]
  , BulletList
      [ [ Plain [ Str "Plus 1" ] ]
      , [ Plain [ Str "Plus 2" ] ]
      , [ Plain [ Str "Plus 3" ] ]
      ]
  , Para [ Str "Minuses tight:" ]
  , BulletList
      [ [ Plain [ Str "Minus 1" ] ]
      , [ Plain [ Str "Minus 2" ] ]
      , [ Plain [ Str "Minus 3" ] ]
      ]
  , Para [ Str "Minuses loose:" ]
  , BulletList
      [ [ Plain [ Str "Minus 1" ] ]
      , [ Plain [ Str "Minus 2" ] ]
      , [ Plain [ Str "Minus 3" ] ]
      ]
  , Header 2 ( "ordered" , [] , [] ) [ Str "Ordered" ]
  , Para [ Str "Tight:" ]
  , OrderedList
      ( 1 , Decimal , Period )
      [ [ Plain [ Str "First" ] ]
      , [ Plain [ Str "Second" ] ]
      , [ Plain [ Str "Third" ] ]
      ]
  , Para [ Str "and:" ]
  , OrderedList
      ( 1 , Decimal , Period )
      [ [ Plain [ Str "One" ] ]
      , [ Plain [ Str "Two" ] ]
      , [ Plain [ Str "Three" ] ]
      ]
  , Para [ Str "Loose using tabs:" ]
  , OrderedList
      ( 1 , Decimal , Period )
      [ [ Plain [ Str "First" ] ]
      , [ Plain [ Str "Second" ] ]
      , [ Plain [ Str "Third" ] ]
      ]
  , Para [ Str "and using spaces:" ]
  , OrderedList
      ( 1 , Decimal , Period )
      [ [ Plain [ Str "One" ] ]
      , [ Plain [ Str "Two" ] ]
      , [ Plain [ Str "Three" ] ]
      ]
  , Para [ Str "Multiple paragraphs:" ]
  , OrderedList
      ( 1 , Decimal , Period )
      [ [ Para [ Str "Item 1, graf one." ]
        , Para
            [ Str
                "Item 1. graf two. The quick brown fox jumped over the lazy dog\8217s"
            , SoftBreak
            , Str "back."
            ]
        ]
      , [ Para [ Str "Item 2." ] ]
      , [ Para [ Str "Item 3." ] ]
      ]
  , Para [ Str "Nested:" ]
  , BulletList
      [ [ Plain [ Str "Tab" ]
        , BulletList
            [ [ Plain [ Str "Tab" ] , BulletList [ [ Plain [ Str "Tab" ] ] ] ]
            ]
        ]
      ]
  , Para [ Str "Here\8217s another:" ]
  , OrderedList
      ( 1 , Decimal , Period )
      [ [ Para [ Str "First" ] ]
      , [ Para [ Str "Second:" ]
        , BlockQuote
            [ BulletList
                [ [ Plain [ Str "Fee" ] ]
                , [ Plain [ Str "Fie" ] ]
                , [ Plain [ Str "Foe" ] ]
                ]
            ]
        ]
      , [ Para [ Str "Third" ] ]
      ]
  , Header
      2 ( "fancy-list-markers" , [] , [] ) [ Str "Fancy list markers" ]
  , OrderedList
      ( 2 , Decimal , TwoParens )
      [ [ Para [ Str "begins with 2" ] ]
      , [ Para [ Str "and now 3" ]
        , Para [ Str "with a continuation" ]
        , OrderedList
            ( 4 , LowerRoman , Period )
            [ [ Plain [ Str "sublist with roman numerals, starting with 4" ] ]
            , [ Plain [ Str "more items" ]
              , OrderedList
                  ( 1 , UpperAlpha , TwoParens )
                  [ [ Plain [ Str "a subsublist" ] ]
                  , [ Plain [ Str "a subsublist" ] ]
                  ]
              ]
            ]
        ]
      ]
  , Para [ Str "Nesting:" ]
  , OrderedList
      ( 1 , UpperAlpha , Period )
      [ [ Plain [ Str "Upper Alpha" ]
        , OrderedList
            ( 1 , UpperRoman , Period )
            [ [ Plain [ Str "Upper Roman." ]
              , OrderedList
                  ( 6 , Decimal , TwoParens )
                  [ [ Plain [ Str "Decimal start with 6" ]
                    , OrderedList
                        ( 3 , LowerAlpha , OneParen )
                        [ [ Plain [ Str "Lower alpha with paren" ] ] ]
                    ]
                  ]
              ]
            ]
        ]
      ]
  , Para [ Str "Autonumbering:" ]
  , OrderedList
      ( 1 , DefaultStyle , DefaultDelim )
      [ [ Plain [ Str "Autonumber." ] ]
      , [ Plain [ Str "More." ]
        , OrderedList
            ( 1 , DefaultStyle , DefaultDelim ) [ [ Plain [ Str "Nested." ] ] ]
        ]
      ]
  , Para [ Str "Autonumbering with explicit start:" ]
  , OrderedList
      ( 4 , LowerAlpha , TwoParens )
      [ [ Plain [ Str "item 1" ] ] , [ Plain [ Str "item 2" ] ] ]
  , Header 2 ( "definition" , [] , [] ) [ Str "Definition" ]
  , DefinitionList
      [ ( [ Str "term 1" ] , [ [ Para [ Str "Definition 1." ] ] ] )
      , ( [ Str "term 2" ]
        , [ [ Para [ Str "Definition 2, paragraph 1." ]
            , Para [ Str "Definition 2, paragraph 2." ]
            ]
          ]
        )
      , ( [ Str "term with " , Emph [ Str "emphasis" ] ]
        , [ [ Para [ Str "Definition 3." ] ] ]
        )
      ]
  , Header 1 ( "field-lists" , [] , [] ) [ Str "Field Lists" ]
  , BlockQuote
      [ DefinitionList
          [ ( [ Str "address" ] , [ [ Para [ Str "61 Main St." ] ] ] )
          , ( [ Str "city" ]
            , [ [ Para
                    [ Emph [ Str "Nowhere" ]
                    , Str ", MA,"
                    , SoftBreak
                    , Str "USA"
                    ]
                ]
              ]
            )
          , ( [ Str "phone" ] , [ [ Para [ Str "123-4567" ] ] ] )
          ]
      ]
  , DefinitionList
      [ ( [ Str "address" ] , [ [ Para [ Str "61 Main St." ] ] ] )
      , ( [ Str "city" ]
        , [ [ Para
                [ Emph [ Str "Nowhere" ] , Str ", MA," , SoftBreak , Str "USA" ]
            ]
          ]
        )
      , ( [ Str "phone" ] , [ [ Para [ Str "123-4567" ] ] ] )
      ]
  , Header 1 ( "html-blocks" , [] , [] ) [ Str "HTML Blocks" ]
  , Para [ Str "Simple block on one line:" ]
  , RawBlock (Format "html") "<div>foo</div>"
  , Para [ Str "Now, nested:" ]
  , RawBlock
      (Format "html")
      "<div>\n    <div>\n        <div>\n            foo\n        </div>\n    </div>\n</div>"
  , Header 1 ( "latex-block" , [] , [] ) [ Str "LaTeX Block" ]
  , RawBlock
      (Format "latex")
      "\\begin{tabular}{|l|l|}\\hline\nAnimal & Number \\\\ \\hline\nDog    & 2      \\\\\nCat    & 1      \\\\ \\hline\n\\end{tabular}"
  , Header 1 ( "inline-markup" , [] , [] ) [ Str "Inline Markup" ]
  , Para
      [ Str "This is "
      , Emph [ Str "emphasized" ]
      , Str ". This is "
      , Strong [ Str "strong" ]
      , Str "."
      ]
  , Para
      [ Str "This is code: "
      , Code ( "" , [] , [] ) ">"
      , Str ", "
      , Code ( "" , [] , [] ) "$"
      , Str ", "
      , Code ( "" , [] , [] ) "\\"
      , Str ", "
      , Code ( "" , [] , [] ) "\\$"
      , Str ", "
      , Code ( "" , [] , [] ) "<html>"
      , Str "."
      ]
  , Para
      [ Str "This is"
      , Subscript [ Str "subscripted" ]
      , Str " and this is "
      , Superscript [ Str "superscripted" ]
      , Str "."
      ]
  , Header
      1 ( "special-characters" , [] , [] ) [ Str "Special Characters" ]
  , Para [ Str "Here is some unicode:" ]
  , BulletList
      [ [ Plain [ Str "I hat: \206" ] ]
      , [ Plain [ Str "o umlaut: \246" ] ]
      , [ Plain [ Str "section: \167" ] ]
      , [ Plain [ Str "set membership: \8712" ] ]
      , [ Plain [ Str "copyright: \169" ] ]
      ]
  , Para [ Str "AT&T has an ampersand in their name." ]
  , Para [ Str "This & that." ]
  , Para [ Str "4 < 5." ]
  , Para [ Str "6 > 5." ]
  , Para [ Str "Backslash: \\" ]
  , Para [ Str "Backtick: `" ]
  , Para [ Str "Asterisk: *" ]
  , Para [ Str "Underscore: _" ]
  , Para [ Str "Left brace: {" ]
  , Para [ Str "Right brace: }" ]
  , Para [ Str "Left bracket: [" ]
  , Para [ Str "Right bracket: ]" ]
  , Para [ Str "Left paren: (" ]
  , Para [ Str "Right paren: )" ]
  , Para [ Str "Greater-than: >" ]
  , Para [ Str "Hash: #" ]
  , Para [ Str "Period: ." ]
  , Para [ Str "Bang: !" ]
  , Para [ Str "Plus: +" ]
  , Para [ Str "Minus: -" ]
  , Header 1 ( "links" , [] , [] ) [ Str "Links" ]
  , Para
      [ Str "Explicit: a "
      , Link ( "" , [] , [] ) [ Str "URL" ] ( "/url/" , "" )
      , Str "."
      ]
  , Para
      [ Str "Explicit with no label: "
      , Link ( "" , [] , [] ) [ Str "foo" ] ( "foo" , "" )
      , Str "."
      ]
  , Para
      [ Str "Two anonymous links: "
      , Link ( "" , [] , [] ) [ Str "the first" ] ( "/url1/" , "" )
      , Str " and "
      , Link ( "" , [] , [] ) [ Str "the second" ] ( "/url2/" , "" )
      ]
  , Para
      [ Str "Reference links: "
      , Link ( "" , [] , [] ) [ Str "link1" ] ( "/url1/" , "" )
      , Str " and "
      , Link ( "" , [] , [] ) [ Str "link2" ] ( "/url2/" , "" )
      , Str " and "
      , Link ( "" , [] , [] ) [ Str "link1" ] ( "/url1/" , "" )
      , Str " again."
      ]
  , Para
      [ Str "Another "
      , Link
          ( "" , [] , [] )
          [ Str "style of reference link" ]
          ( "/url1/" , "" )
      , Str "."
      ]
  , Para
      [ Str "Here\8217s a "
      , Link
          ( "" , [] , [] )
          [ Str "link with an ampersand in the URL" ]
          ( "http://example.com/?foo=1&bar=2" , "" )
      , Str "."
      ]
  , Para
      [ Str "Here\8217s a link with an amersand in the link text: "
      , Link ( "" , [] , [] ) [ Str "AT&T" ] ( "/url/" , "" )
      , Str "."
      ]
  , Para
      [ Str "Autolinks: "
      , Link
          ( "" , [] , [] )
          [ Str "http://example.com/?foo=1&bar=2" ]
          ( "http://example.com/?foo=1&bar=2" , "" )
      , Str " and "
      , Link
          ( "" , [] , [] )
          [ Str "nobody@nowhere.net" ]
          ( "mailto:nobody@nowhere.net" , "" )
      , Str "."
      ]
  , Para [ Str "But not here:" ]
  , CodeBlock ( "" , [] , [] ) "http://example.com/"
  , Header 1 ( "images" , [] , [] ) [ Str "Images" ]
  , Para
      [ Str "From "
      , Quoted DoubleQuote [ Str "Voyage dans la Lune" ]
      , Str " by Georges Melies (1902):"
      ]
  , Para
      [ Image ( "" , [] , [] ) [ Str "image" ] ( "lalune.jpg" , "" ) ]
  , Para
      [ Image
          ( "" , [] , [ ( "height" , "2343px" ) ] )
          [ Str "Voyage dans la Lune" ]
          ( "lalune.jpg" , "" )
      ]
  , Para
      [ Str "Here is a movie "
      , Image ( "" , [] , [] ) [ Str "movie" ] ( "movie.jpg" , "" )
      , Str " icon."
      ]
  , Para
      [ Str "And an "
      , Link
          ( "" , [] , [] )
          [ Image ( "" , [] , [] ) [ Str "A movie" ] ( "movie.jpg" , "" ) ]
          ( "/url" , "" )
      , Str "."
      ]
  , Header 1 ( "comments" , [] , [] ) [ Str "Comments" ]
  , Para [ Str "First paragraph" ]
  , Para [ Str "Another paragraph" ]
  , Para [ Str "A third paragraph" ]
  , Header 1 ( "line-blocks" , [] , [] ) [ Str "Line blocks" ]
  , LineBlock
      [ [ Str "But can a bee be said to be" ]
      , [ Str "\160\160\160\160or not to be an entire bee," ]
      , [ Str
            "\160\160\160\160\160\160\160\160when half the bee is not a bee,"
        ]
      , [ Str
            "\160\160\160\160\160\160\160\160\160\160\160\160due to some ancient injury?"
        ]
      , []
      , [ Str "Continuation line" ]
      , [ Str "\160\160and another" ]
      ]
  , Header 1 ( "simple-tables" , [] , [] ) [ Str "Simple Tables" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignDefault , ColWidthDefault )
      , ( AlignDefault , ColWidthDefault )
      , ( AlignDefault , ColWidthDefault )
      ]
      (TableHead
         ( "" , [] , [] )
         [ Row
             ( "" , [] , [] )
             [ Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "col 1" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "col 2" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "col 3" ] ]
             ]
         ])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r1 a" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "b" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "c" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r2 d" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "e" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "f" ] ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Para [ Str "Headless" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignDefault , ColWidthDefault )
      , ( AlignDefault , ColWidthDefault )
      , ( AlignDefault , ColWidthDefault )
      ]
      (TableHead
         ( "" , [] , [] )
         [ Row
             ( "" , [] , [] )
             [ Cell ( "" , [] , [] ) AlignDefault (RowSpan 1) (ColSpan 1) []
             , Cell ( "" , [] , [] ) AlignDefault (RowSpan 1) (ColSpan 1) []
             , Cell ( "" , [] , [] ) AlignDefault (RowSpan 1) (ColSpan 1) []
             ]
         ])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r1 a" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "b" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "c" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r2 d" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "e" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "f" ] ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Header 1 ( "grid-tables" , [] , [] ) [ Str "Grid Tables" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignDefault , ColWidth 0.2375 )
      , ( AlignDefault , ColWidth 0.15 )
      , ( AlignDefault , ColWidth 0.1625 )
      ]
      (TableHead
         ( "" , [] , [] )
         [ Row
             ( "" , [] , [] )
             [ Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "col 1" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "col 2" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "col 3" ] ]
             ]
         ])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r1 a" , SoftBreak , Str "r1 bis" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "b" , SoftBreak , Str "b 2" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "c" , SoftBreak , Str "c 2" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r2 d" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "e" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "f" ] ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Para [ Str "Headless" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignDefault , ColWidth 0.2375 )
      , ( AlignDefault , ColWidth 0.15 )
      , ( AlignDefault , ColWidth 0.1625 )
      ]
      (TableHead ( "" , [] , [] ) [])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r1 a" , SoftBreak , Str "r1 bis" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "b" , SoftBreak , Str "b 2" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "c" , SoftBreak , Str "c 2" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r2 d" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "e" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "f" ] ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Para [ Str "Spaces at ends of lines" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignDefault , ColWidth 0.2375 )
      , ( AlignDefault , ColWidth 0.15 )
      , ( AlignDefault , ColWidth 0.1625 )
      ]
      (TableHead ( "" , [] , [] ) [])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r1 a" , SoftBreak , Str "r1 bis" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "b" , SoftBreak , Str "b 2" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "c" , SoftBreak , Str "c 2" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "r2 d" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "e" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "f" ] ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Para [ Str "Multiple blocks in a cell" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignDefault , ColWidth 0.2375 )
      , ( AlignDefault , ColWidth 0.15 )
      , ( AlignDefault , ColWidth 0.1625 )
      ]
      (TableHead ( "" , [] , [] ) [])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Para [ Str "r1 a" ] , Para [ Str "r1 bis" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ BulletList
                      [ [ Plain [ Str "b" ] ]
                      , [ Plain [ Str "b 2" ] ]
                      , [ Plain [ Str "b 2" ] ]
                      ]
                  ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain
                      [ Str "c"
                      , SoftBreak
                      , Str "c 2"
                      , SoftBreak
                      , Str "c 2"
                      ]
                  ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Header 1 ( "footnotes" , [] , [] ) [ Str "Footnotes" ]
  , Para [ Note [ Para [ Str "Note with one line." ] ] ]
  , Para
      [ Note
          [ Para [ Str "Note with" , SoftBreak , Str "continuation line." ] ]
      ]
  , Para
      [ Note
          [ Para [ Str "Note with" ] , Para [ Str "continuation block." ] ]
      ]
  , Para
      [ Note
          [ Para [ Str "Note with" , SoftBreak , Str "continuation line" ]
          , Para [ Str "and a second para." ]
          ]
      ]
  , Para [ Str "Not in note." ]
  , Header 1 ( "math" , [] , [] ) [ Str "Math" ]
  , Para
      [ Str "Some inline math "
      , Math InlineMath "E=mc^2"
      , Str ". Now some"
      , SoftBreak
      , Str "display math:"
      ]
  , Para [ Math DisplayMath "E=mc^2" ]
  , Para [ Math DisplayMath "E = mc^2" ]
  , Para
      [ Math DisplayMath "E = mc^2"
      , Math DisplayMath "\\alpha = \\beta"
      ]
  , Para
      [ Math
          DisplayMath
          "\\begin{aligned}\nE &= mc^2\\\\\nF &= \\pi E\n\\end{aligned}"
      , Math DisplayMath "F &= \\gamma \\alpha^2"
      ]
  , Para [ Str "All done." ]
  , Header 1 ( "default-role" , [] , [] ) [ Str "Default-Role" ]
  , Para
      [ Str "Try changing the default role to a few different things." ]
  , Header
      2
      ( "doesnt-break-title-parsing" , [] , [] )
      [ Str "Doesn\8217t Break Title Parsing" ]
  , Para
      [ Str "Inline math: "
      , Math InlineMath "E=mc^2"
      , Str " or "
      , Math InlineMath "E=mc^2"
      , Str " or "
      , Math InlineMath "E=mc^2"
      , Str "."
      , SoftBreak
      , Str "Other roles: "
      , Superscript [ Str "super" ]
      , Str ", "
      , Subscript [ Str "sub" ]
      , Str "."
      ]
  , Para
      [ Math DisplayMath "\\alpha = beta" , Math DisplayMath "E = mc^2" ]
  , Para
      [ Str "Some "
      , Superscript [ Str "of" ]
      , Str " these "
      , Superscript [ Str "words" ]
      , Str " are in "
      , Superscript [ Str "superscript" ]
      , Str "."
      ]
  , Para [ Str "Reset default-role to the default default." ]
  , Para
      [ Str "And now "
      , Span
          ( "" , [ "title-ref" ] , [] ) [ Str "some-invalid-string-3231231" ]
      , Str " is nonsense."
      ]
  , Para
      [ Str "And now with "
      , RawInline
          (Format "html") "<b>inline</b> <span id=\"test\">HTML</span>"
      , Str "."
      ]
  , Para
      [ Str "And some inline haskell "
      , Code ( "" , [ "haskell" ] , [] ) "fmap id [1,2..10]"
      , Str "."
      ]
  , Para
      [ Str "Indirect python role "
      , Code
          ( "" , [ "py" , "python" , "indirect" ] , [] )
          "[x*x for x in [1,2,3,4,5]]"
      , Str "."
      ]
  , Para
      [ Str "Different indirect C "
      , Code ( "" , [ "c" , "different-indirect" ] , [] ) "int x = 15;"
      , Str "."
      ]
  , Header
      2 ( "literal-symbols" , [] , [] ) [ Str "Literal symbols" ]
  , Para [ Str "2*2 = 4*1" ]
  ]
