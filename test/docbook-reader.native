Pandoc
  Meta
    { unMeta =
        fromList
          [ ( "author"
            , MetaList
                [ MetaInlines
                    [ Str "John" , SoftBreak , Str "MacFarlane" ]
                , MetaInlines [ Str "Anonymous" ]
                ]
            )
          , ( "date" , MetaInlines [ Str "July 17, 2006" ] )
          , ( "title" , MetaInlines [ Str "Pandoc Test Suite" ] )
          ]
    }
  [ Para
      [ Str
          "This is a set of tests for pandoc. Most of them are adapted from John"
      , SoftBreak
      , Str "Gruber\8217s markdown test suite."
      ]
  , Header 1 ( "headers" , [] , [] ) [ Str "Headers" ]
  , Header
      2
      ( "level-2-with-an-embedded-link" , [] , [] )
      [ Str "Level 2 with an "
      , Link
          ( "" , [] , [] ) [ Str "embedded link" ] ( "/url" , "" )
      ]
  , Header
      3
      ( "level-3-with-emphasis" , [] , [] )
      [ Str "Level 3 with " , Emph [ Str "emphasis" ] ]
  , Header 4 ( "level-4" , [] , [] ) [ Str "Level 4" ]
  , Header 5 ( "level-5" , [] , [] ) [ Str "Level 5" ]
  , Para [ Str "Hi." ]
  , Header 1 ( "level-1" , [] , [] ) [ Str "Level 1" ]
  , Header
      2
      ( "level-2-with-emphasis" , [] , [] )
      [ Str "Level 2 with " , Emph [ Str "emphasis" ] ]
  , Header 3 ( "level-3" , [] , [] ) [ Str "Level 3" ]
  , Para [ Str "with no blank line" ]
  , Header 4 ( "" , [ "unnumbered" ] , [] ) [ Str "Level 4" ]
  , Para [ Str "An unnumbered section." ]
  , Header 2 ( "level-2" , [] , [] ) [ Str "Level 2" ]
  , Para [ Str "with no blank line" ]
  , Header 1 ( "paragraphs" , [] , [] ) [ Str "Paragraphs" ]
  , Para [ Str "Here\8217s a regular paragraph." ]
  , Para
      [ Str
          "In Markdown 1.0.0 and earlier. Version 8. This line turns into a list"
      , SoftBreak
      , Str
          "item. Because a hard-wrapped line in the middle of a paragraph looked like"
      , SoftBreak
      , Str "a list item."
      ]
  , Para [ Str "Here\8217s one with a bullet. * criminey." ]
  , Header
      1 ( "block-quotes" , [] , [] ) [ Str "Block Quotes" ]
  , Para [ Str "E-mail style:" ]
  , BlockQuote
      [ Para [ Str "This is a block quote. It is pretty short." ]
      ]
  , BlockQuote
      [ Para [ Str "Code in a block quote:" ]
      , CodeBlock
          ( "" , [] , [] ) "sub status {\n    print \"working\";\n}"
      , CodeBlock ( "" , [] , [] ) "% ls"
      , Para [ Str "A list:" ]
      , OrderedList
          ( 1 , Decimal , DefaultDelim )
          [ [ Para [ Str "item one" ] ]
          , [ Para [ Str "item two" ] ]
          ]
      , Para [ Str "Nested block quotes:" ]
      , BlockQuote [ Para [ Str "nested" ] ]
      , BlockQuote [ Para [ Str "nested" ] ]
      ]
  , Para [ Str "This should not be a block quote: 2 > 1." ]
  , Para [ Str "And a following paragraph." ]
  , Header 1 ( "code-blocks" , [] , [] ) [ Str "Code Blocks" ]
  , Para [ Str "Code:" ]
  , CodeBlock
      ( "" , [] , [] )
      "---- (should be four hyphens)\n\nsub status {\n    print \"working\";\n}\n\nthis code block is indented by one tab"
  , Para [ Str "And:" ]
  , CodeBlock
      ( "" , [] , [] )
      "    this code block is indented by two tabs\n\nThese should not be escaped:  \\$ \\\\ \\> \\[ \\{"
  , Header 1 ( "lists" , [] , [] ) [ Str "Lists" ]
  , Header 2 ( "unordered" , [] , [] ) [ Str "Unordered" ]
  , Para [ Str "Asterisks loose:" ]
  , BulletList
      [ [ Para [ Str "asterisk 1" ] ]
      , [ Para [ Str "asterisk 2" ] ]
      , [ Para [ Str "asterisk 3" ] ]
      ]
  , Para [ Str "Pluses loose:" ]
  , BulletList
      [ [ Para [ Str "Plus 1" ] ]
      , [ Para [ Str "Plus 2" ] ]
      , [ Para [ Str "Plus 3" ] ]
      ]
  , Para [ Str "Minuses loose:" ]
  , BulletList
      [ [ Para [ Str "Minus 1" ] ]
      , [ Para [ Str "Minus 2" ] ]
      , [ Para [ Str "Minus 3" ] ]
      ]
  , Header 2 ( "ordered" , [] , [] ) [ Str "Ordered" ]
  , OrderedList
      ( 1 , Decimal , DefaultDelim )
      [ [ Para [ Str "First" ] ]
      , [ Para [ Str "Second" ] ]
      , [ Para [ Str "Third" ] ]
      ]
  , Para [ Str "and using spaces:" ]
  , OrderedList
      ( 1 , Decimal , DefaultDelim )
      [ [ Para [ Str "One" ] ]
      , [ Para [ Str "Two" ] ]
      , [ Para [ Str "Three" ] ]
      ]
  , Para [ Str "Multiple paragraphs:" ]
  , OrderedList
      ( 1 , Decimal , DefaultDelim )
      [ [ Para [ Str "Item 1, graf one." ]
        , Para
            [ Str
                "Item 1. graf two. The quick brown fox jumped over the lazy dog\8217s"
            , SoftBreak
            , Str "back."
            ]
        ]
      , [ Para [ Str "Item 2." ] ]
      , [ Para [ Str "Item 3." ] ]
      ]
  , Header 2 ( "nested" , [] , [] ) [ Str "Nested" ]
  , BulletList
      [ [ Para [ Str "Tab" ]
        , BulletList
            [ [ Para [ Str "Tab" ]
              , BulletList [ [ Para [ Str "Tab" ] ] ]
              ]
            ]
        ]
      ]
  , Para [ Str "Here\8217s another:" ]
  , OrderedList
      ( 1 , Decimal , DefaultDelim )
      [ [ Para [ Str "First" ] ]
      , [ Para [ Str "Second:" ]
        , BulletList
            [ [ Para [ Str "Fee" ] ]
            , [ Para [ Str "Fie" ] ]
            , [ Para [ Str "Foe" ] ]
            ]
        ]
      , [ Para [ Str "Third" ] ]
      ]
  , Para [ Str "Same thing but with paragraphs:" ]
  , OrderedList
      ( 1 , Decimal , DefaultDelim )
      [ [ Para [ Str "First" ] ]
      , [ Para [ Str "Second:" ]
        , BulletList
            [ [ Para [ Str "Fee" ] ]
            , [ Para [ Str "Fie" ] ]
            , [ Para [ Str "Foe" ] ]
            ]
        ]
      , [ Para [ Str "Third" ] ]
      ]
  , Header
      2 ( "tabs-and-spaces" , [] , [] ) [ Str "Tabs and spaces" ]
  , BulletList
      [ [ Para [ Str "this is a list item indented with tabs" ] ]
      , [ Para [ Str "this is a list item indented with spaces" ]
        , BulletList
            [ [ Para
                  [ Str
                      "this is an example list item indented with tabs"
                  ]
              ]
            , [ Para
                  [ Str
                      "this is an example list item indented with spaces"
                  ]
              ]
            ]
        ]
      ]
  , Header
      2
      ( "fancy-list-markers" , [] , [] )
      [ Str "Fancy list markers" ]
  , OrderedList
      ( 2 , Decimal , DefaultDelim )
      [ [ Para [ Str "begins with 2" ] ]
      , [ Para [ Str "and now 3" ]
        , Para [ Str "with a continuation" ]
        , OrderedList
            ( 4 , LowerRoman , DefaultDelim )
            [ [ Para
                  [ Str "sublist with roman numerals, starting with 4" ]
              ]
            , [ Para [ Str "more items" ]
              , OrderedList
                  ( 1 , UpperAlpha , DefaultDelim )
                  [ [ Para [ Str "a subsublist" ] ]
                  , [ Para [ Str "a subsublist" ] ]
                  ]
              ]
            ]
        ]
      ]
  , Para [ Str "Nesting:" ]
  , OrderedList
      ( 1 , UpperAlpha , DefaultDelim )
      [ [ Para [ Str "Upper Alpha" ]
        , OrderedList
            ( 1 , UpperRoman , DefaultDelim )
            [ [ Para [ Str "Upper Roman." ]
              , OrderedList
                  ( 6 , Decimal , DefaultDelim )
                  [ [ Para [ Str "Decimal start with 6" ]
                    , OrderedList
                        ( 3 , LowerAlpha , DefaultDelim )
                        [ [ Para [ Str "Lower alpha with paren" ] ] ]
                    ]
                  ]
              ]
            ]
        ]
      ]
  , Para [ Str "Autonumbering:" ]
  , OrderedList
      ( 1 , Decimal , DefaultDelim )
      [ [ Para [ Str "Autonumber." ] ]
      , [ Para [ Str "More." ]
        , OrderedList
            ( 1 , Decimal , DefaultDelim )
            [ [ Para [ Str "Nested." ] ] ]
        ]
      ]
  , Para [ Str "Should not be a list item:" ]
  , Para [ Str "M.A.\160\&2007" ]
  , Para [ Str "B. Williams" ]
  , Header 2 ( "callout" , [] , [] ) [ Str "Callout" ]
  , Para [ Str "Simple." ]
  , BulletList
      [ [ Para
            [ Str "A "
            , Code ( "" , [] , [] ) "__letrec"
            , Str " is equivalent to a normal"
            , SoftBreak
            , Str "Haskell LET."
            ]
        ]
      , [ Para
            [ Str "GHC compiled the body of our list comprehension into"
            , SoftBreak
            , Str "a loop named "
            , Code ( "" , [] , [] ) "go_s1YC"
            , Str "."
            ]
        ]
      , [ Para
            [ Str "If our CASE expression matches the empty list, we"
            , SoftBreak
            , Str "return the empty list. This is reassuringly"
            , SoftBreak
            , Str "familiar."
            ]
        ]
      ]
  , Header
      1
      ( "definition-lists" , [] , [] )
      [ Str "Definition Lists" ]
  , DefinitionList
      [ ( [ Str "apple" ] , [ [ Para [ Str "red fruit" ] ] ] )
      , ( [ Str "orange" ] , [ [ Para [ Str "orange fruit" ] ] ] )
      , ( [ Str "banana" ] , [ [ Para [ Str "yellow fruit" ] ] ] )
      ]
  , Para [ Str "Multiple blocks with italics:" ]
  , DefinitionList
      [ ( [ Emph [ Str "apple" ] ]
        , [ [ Para [ Str "red fruit" ]
            , Para [ Str "contains seeds, crisp, pleasant to taste" ]
            ]
          ]
        )
      , ( [ Emph [ Str "orange" ] ]
        , [ [ Para [ Str "orange fruit" ]
            , CodeBlock ( "" , [] , [] ) "{ orange code block }"
            , BlockQuote [ Para [ Str "orange block quote" ] ]
            ]
          ]
        )
      ]
  , Para [ Str "Multiple definitions, loose:" ]
  , DefinitionList
      [ ( [ Str "apple" ]
        , [ [ Para [ Str "red fruit" ] ]
          , [ Para [ Str "computer" ] ]
          ]
        )
      , ( [ Str "orange" ]
        , [ [ Para [ Str "orange fruit" ] ]
          , [ Para [ Str "bank" ] ]
          ]
        )
      ]
  , Para
      [ Str
          "Blank line after term, indented marker, alternate markers:"
      ]
  , DefinitionList
      [ ( [ Str "apple" ]
        , [ [ Para [ Str "red fruit" ] ]
          , [ Para [ Str "computer" ] ]
          ]
        )
      , ( [ Str "orange" ]
        , [ [ Para [ Str "orange fruit" ]
            , OrderedList
                ( 1 , Decimal , DefaultDelim )
                [ [ Para [ Str "sublist" ] ]
                , [ Para [ Str "sublist" ] ]
                ]
            ]
          ]
        )
      ]
  , Header
      1 ( "inline-markup" , [] , [] ) [ Str "Inline Markup" ]
  , Para
      [ Str "This is "
      , Emph [ Str "emphasized" ]
      , Str ", and so "
      , Emph [ Str "is" , SoftBreak , Str "this" ]
      , Str "."
      ]
  , Para
      [ Str "This is "
      , Strong [ Str "strong" ]
      , Str ", and so"
      , SoftBreak
      , Strong [ Str "is this" ]
      , Str "."
      ]
  , Para
      [ Str "An "
      , Emph
          [ Link
              ( "" , [] , [] ) [ Str "emphasized link" ] ( "/url" , "" )
          ]
      , Str "."
      ]
  , Para
      [ Strong
          [ Emph [ Str "This is strong and" , SoftBreak , Str "em." ]
          ]
      ]
  , Para
      [ Str "So is "
      , Strong [ Emph [ Str "this" ] ]
      , Str " word."
      ]
  , Para
      [ Strong
          [ Emph [ Str "This is strong and" , SoftBreak , Str "em." ]
          ]
      ]
  , Para
      [ Str "So is "
      , Strong [ Emph [ Str "this" ] ]
      , Str " word."
      ]
  , Para
      [ Str "This is code: "
      , Code ( "" , [] , [] ) ">"
      , Str ", "
      , Code ( "" , [] , [] ) "$"
      , Str ","
      , SoftBreak
      , Code ( "" , [] , [] ) "\\"
      , Str ", "
      , Code ( "" , [] , [] ) "\\$"
      , Str ","
      , SoftBreak
      , Code ( "" , [] , [] ) "<html>"
      , Str "."
      ]
  , Para
      [ Str "More code: "
      , Code ( "" , [] , [] ) "Class"
      , Str " and "
      , Code ( "" , [] , [] ) "Type"
      ]
  , Para
      [ Str "Referencing a man page: "
      , Code ( "" , [ "citerefentry" ] , [] ) "nix.conf(5)"
      ]
  , Para
      [ Strikeout
          [ Str "This is"
          , SoftBreak
          , Emph [ Str "strikeout" ]
          , Str "."
          ]
      ]
  , Para
      [ Str "Superscripts: a"
      , Superscript [ Str "bc" ]
      , Str "d"
      , SoftBreak
      , Str "a"
      , Superscript [ Emph [ Str "hello" ] ]
      , SoftBreak
      , Str "a"
      , Superscript [ Str "hello\160there" ]
      , Str "."
      ]
  , Para
      [ Str "Subscripts: H"
      , Subscript [ Str "2" ]
      , Str "O, H"
      , Subscript [ Str "23" ]
      , Str "O,"
      , SoftBreak
      , Str "H"
      , Subscript [ Str "many\160of\160them" ]
      , Str "O."
      ]
  , Para
      [ Str
          "These should not be superscripts or subscripts, because of the unescaped"
      , SoftBreak
      , Str "spaces: a^b c^d, a~b c~d."
      ]
  , Header
      1
      ( "smart-quotes-ellipses-dashes" , [] , [] )
      [ Str "Smart quotes, ellipses, dashes" ]
  , Para
      [ Quoted DoubleQuote [ Str "Hello," ]
      , Str " said the spider. "
      , Quoted
          DoubleQuote
          [ Quoted SingleQuote [ Str "Shelob" ]
          , Str " is my"
          , SoftBreak
          , Str "name."
          ]
      ]
  , Para
      [ Quoted DoubleQuote [ Str "A" ]
      , Str ", "
      , Quoted DoubleQuote [ Str "B" ]
      , Str ", and "
      , Quoted DoubleQuote [ Str "C" ]
      , Str " are letters."
      ]
  , Para
      [ Quoted
          DoubleQuote
          [ Str "He said, "
          , Quoted SingleQuote [ Str "I want to go." ]
          ]
      , Str " Were you alive in the"
      , SoftBreak
      , Str "70\8217s?"
      ]
  , Para
      [ Str
          "Some dashes: one\8212two \8212 three\8212four \8212 five."
      ]
  , Para
      [ Str
          "Dashes between numbers: 5\8211\&7, 255\8211\&66, 1987\8211\&1999."
      ]
  , Para [ Str "Ellipses\8230and\8230and\8230." ]
  , Header 1 ( "math" , [] , [] ) []
  , Para
      [ Math DisplayMath "e = mc^{2}"
      , Math DisplayMath "1"
      , SoftBreak
      , Math InlineMath "e = mc^{2}"
      , SoftBreak
      , Math DisplayMath "e = mc^{2}"
      ]
  , Header
      1
      ( "special-characters" , [] , [] )
      [ Str "Special Characters" ]
  , Para [ Str "Here is some unicode:" ]
  , BulletList
      [ [ Para [ Str "I hat: \206" ] ]
      , [ Para [ Str "o umlaut: \246" ] ]
      , [ Para [ Str "section: \167" ] ]
      , [ Para [ Str "set membership: \8712" ] ]
      , [ Para [ Str "copyright: \169" ] ]
      ]
  , Para [ Str "AT&T has an ampersand in their name." ]
  , Para [ Str "AT&T is another way to write it." ]
  , Para [ Str "This & that." ]
  , Para [ Str "4 < 5." ]
  , Para [ Str "6 > 5." ]
  , Para [ Str "Backslash: \\" ]
  , Para [ Str "Backtick: `" ]
  , Para [ Str "Asterisk: *" ]
  , Para [ Str "Underscore: _" ]
  , Para [ Str "Left brace: {" ]
  , Para [ Str "Right brace: }" ]
  , Para [ Str "Left bracket: [" ]
  , Para [ Str "Right bracket: ]" ]
  , Para [ Str "Left paren: (" ]
  , Para [ Str "Right paren: )" ]
  , Para [ Str "Greater-than: >" ]
  , Para [ Str "Hash: #" ]
  , Para [ Str "Period: ." ]
  , Para [ Str "Bang: !" ]
  , Para [ Str "Plus: +" ]
  , Para [ Str "Minus: -" ]
  , Header 1 ( "links" , [] , [] ) [ Str "Links" ]
  , Header 2 ( "explicit" , [] , [] ) [ Str "Explicit" ]
  , Para
      [ Str "Just a "
      , Link ( "" , [] , [] ) [ Str "URL" ] ( "/url/" , "" )
      , Str "."
      ]
  , Para
      [ Link
          ( "" , [] , [] ) [ Str "URL and title" ] ( "/url/" , "" )
      , Str "."
      ]
  , Para
      [ Link
          ( "" , [] , [] ) [ Str "URL and title" ] ( "/url/" , "" )
      , Str "."
      ]
  , Para
      [ Link
          ( "" , [] , [] ) [ Str "URL and title" ] ( "/url/" , "" )
      , Str "."
      ]
  , Para
      [ Link
          ( "" , [] , [] ) [ Str "URL and title" ] ( "/url/" , "" )
      ]
  , Para
      [ Link
          ( "" , [] , [] ) [ Str "URL and title" ] ( "/url/" , "" )
      ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "with_underscore" ]
          ( "/url/with_underscore" , "" )
      ]
  , Para
      [ Link
          ( "" , [] , [] )
          [ Str "nobody@nowhere.net" ]
          ( "mailto:nobody@nowhere.net" , "" )
      ]
  , Para
      [ Link ( "" , [] , [] ) [ Str "Empty" ] ( "" , "" )
      , Str "."
      ]
  , Header 2 ( "reference" , [] , [] ) [ Str "Reference" ]
  , Para
      [ Str "Foo "
      , Link ( "" , [] , [] ) [ Str "bar" ] ( "/url/" , "" )
      , Str "."
      ]
  , Para
      [ Str "Foo "
      , Link ( "" , [] , [] ) [ Str "bar" ] ( "/url/" , "" )
      , Str "."
      ]
  , Para
      [ Str "Foo "
      , Link ( "" , [] , [] ) [ Str "bar" ] ( "/url/" , "" )
      , Str "."
      ]
  , Para
      [ Str "With "
      , Link
          ( "" , [] , [] )
          [ Str "embedded [brackets]" ]
          ( "/url/" , "" )
      , Str "."
      ]
  , Para
      [ Link ( "" , [] , [] ) [ Str "b" ] ( "/url/" , "" )
      , Str " by itself should be a link."
      ]
  , Para
      [ Str "Indented "
      , Link ( "" , [] , [] ) [ Str "once" ] ( "/url" , "" )
      , Str "."
      ]
  , Para
      [ Str "Indented "
      , Link ( "" , [] , [] ) [ Str "twice" ] ( "/url" , "" )
      , Str "."
      ]
  , Para
      [ Str "Indented "
      , Link ( "" , [] , [] ) [ Str "thrice" ] ( "/url" , "" )
      , Str "."
      ]
  , Para [ Str "This should [not][] be a link." ]
  , CodeBlock ( "" , [] , [] ) "[not]: /url"
  , Para
      [ Str "Foo "
      , Link ( "" , [] , [] ) [ Str "bar" ] ( "/url/" , "" )
      , Str "."
      ]
  , Para
      [ Str "Foo "
      , Link ( "" , [] , [] ) [ Str "biz" ] ( "/url/" , "" )
      , Str "."
      ]
  , Header
      2 ( "with-ampersands" , [] , [] ) [ Str "With ampersands" ]
  , Para
      [ Str "Here\8217s a "
      , Link
          ( "" , [] , [] )
          [ Str "link with an"
          , SoftBreak
          , Str "ampersand in the URL"
          ]
          ( "http://example.com/?foo=1&bar=2" , "" )
      , Str "."
      ]
  , Para
      [ Str "Here\8217s a link with an amersand in the link text:"
      , SoftBreak
      , Link
          ( "" , [] , [] ) [ Str "AT&T" ] ( "http://att.com/" , "" )
      , Str "."
      ]
  , Para
      [ Str "Here\8217s an "
      , Link
          ( "" , [] , [] )
          [ Str "inline link" ]
          ( "/script?foo=1&bar=2" , "" )
      , Str "."
      ]
  , Para
      [ Str "Here\8217s an "
      , Link
          ( "" , [] , [] )
          [ Str "inline link in pointy" , SoftBreak , Str "braces" ]
          ( "/script?foo=1&bar=2" , "" )
      , Str "."
      ]
  , Header 2 ( "autolinks" , [] , [] ) [ Str "Autolinks" ]
  , Para
      [ Str "With an ampersand:"
      , SoftBreak
      , Link
          ( "" , [] , [] )
          [ Str "http://example.com/?foo=1&bar=2" ]
          ( "http://example.com/?foo=1&bar=2" , "" )
      ]
  , BulletList
      [ [ Para [ Str "In a list?" ] ]
      , [ Para
            [ Link
                ( "" , [] , [] )
                [ Str "http://example.com/" ]
                ( "http://example.com/" , "" )
            ]
        ]
      , [ Para [ Str "It should." ] ]
      ]
  , Para
      [ Str "An e-mail address: "
      , Link
          ( "" , [] , [] )
          [ Str "nobody@nowhere.net" ]
          ( "mailto:nobody@nowhere.net" , "" )
      ]
  , BlockQuote
      [ Para
          [ Str "Blockquoted:"
          , SoftBreak
          , Link
              ( "" , [] , [] )
              [ Str "http://example.com/" ]
              ( "http://example.com/" , "" )
          ]
      ]
  , Para
      [ Str "Auto-links should not occur here:"
      , SoftBreak
      , Code ( "" , [] , [] ) "<http://example.com/>"
      ]
  , CodeBlock
      ( "" , [] , [] ) "or here: <http://example.com/>"
  , Header 1 ( "images" , [] , [] ) [ Str "Images" ]
  , Para
      [ Str "From "
      , Quoted DoubleQuote [ Str "Voyage dans la Lune" ]
      , Str " by Georges Melies (1902):"
      ]
  , Para
      [ Image
          ( "" , [] , [] )
          [ Str "lalune fig caption" ]
          ( "lalune.jpg" , "fig:" )
      ]
  , Para
      [ Str "Here is a movie "
      , Image ( "" , [] , [] ) [] ( "movie.jpg" , "" )
      , Str " icon."
      , SoftBreak
      , Str "And here a second movie "
      , Image
          ( "" , [] , [] ) [ Str "alt text" ] ( "movie.jpg" , "" )
      , Str " icon."
      , SoftBreak
      , Str "And here a third movie "
      , Image
          ( "" , [] , [] ) [ Str "alt text" ] ( "movie.jpg" , "" )
      , Str " icon."
      ]
  , Para
      [ Image
          ( "" , [] , [] )
          [ Str "lalune no figure alt text" ]
          ( "lalune.jpg" , "" )
      ]
  , Header 1 ( "footnotes" , [] , [] ) [ Str "Footnotes" ]
  , Para
      [ Str "Here is a footnote reference,"
      , Note
          [ Para
              [ Str
                  "Here is the footnote. It can go anywhere after the footnote reference."
              , SoftBreak
              , Str "It need not be placed at the end of the document."
              ]
          ]
      , Str " and another."
      , Note
          [ Para
              [ Str
                  "Here\8217s the long note. This one contains multiple blocks."
              ]
          , Para
              [ Str
                  "Subsequent blocks are indented to show that they belong to the"
              , SoftBreak
              , Str "footnote (as with list items)."
              ]
          , CodeBlock ( "" , [] , [] ) "  { <code> }"
          , Para
              [ Str
                  "If you want, you can indent every line, but you can also be lazy and"
              , SoftBreak
              , Str "just indent the first line of each block."
              ]
          ]
      , Str " This should "
      , Emph [ Str "not" ]
      , Str " be a footnote reference,"
      , SoftBreak
      , Str
          "because it contains a space.[^my note] Here is an inline note."
      , Note
          [ Para
              [ Str "This is "
              , Emph [ Str "easier" ]
              , Str " to type. Inline notes may contain"
              , SoftBreak
              , Link
                  ( "" , [] , [] )
                  [ Str "links" ]
                  ( "http://google.com" , "" )
              , Str " and "
              , Code ( "" , [] , [] ) "]"
              , SoftBreak
              , Str "verbatim characters, as well as [bracketed text]."
              ]
          ]
      ]
  , BlockQuote
      [ Para
          [ Str "Notes can go in quotes."
          , Note [ Para [ Str "In quote." ] ]
          ]
      ]
  , OrderedList
      ( 1 , Decimal , DefaultDelim )
      [ [ Para
            [ Str "And in list items."
            , Note [ Para [ Str "In list." ] ]
            ]
        ]
      ]
  , Para
      [ Str
          "This paragraph should not be part of the note, as it is not indented."
      ]
  , Header 1 ( "tables" , [] , [] ) [ Str "Tables" ]
  , Para [ Str "Simple table with caption:" ]
  , Table
      ( "" , [] , [] )
      (Caption
         Nothing
         [ Plain [ Str "Demonstration of simple table syntax." ] ])
      [ ( AlignRight , ColWidthDefault )
      , ( AlignLeft , ColWidthDefault )
      , ( AlignCenter , ColWidthDefault )
      , ( AlignLeft , ColWidthDefault )
      ]
      (TableHead
         ( "" , [] , [] )
         [ Row
             ( "" , [] , [] )
             [ Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Right" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Left" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Center" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Default" ] ]
             ]
         ])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "12" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "12" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "12" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "12" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "123" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "123" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "123" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "123" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1" ] ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Para [ Str "Simple table without caption:" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignRight , ColWidthDefault )
      , ( AlignLeft , ColWidthDefault )
      , ( AlignCenter , ColWidthDefault )
      , ( AlignLeft , ColWidthDefault )
      ]
      (TableHead
         ( "" , [] , [] )
         [ Row
             ( "" , [] , [] )
             [ Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Right" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Left" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Center" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Default" ] ]
             ]
         ])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "12" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "12" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "12" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "12" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "123" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "123" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "123" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "123" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1" ] ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Para [ Str "Simple table indented two spaces:" ]
  , Table
      ( "" , [] , [] )
      (Caption
         Nothing
         [ Plain [ Str "Demonstration of simple table syntax." ] ])
      [ ( AlignRight , ColWidthDefault )
      , ( AlignLeft , ColWidthDefault )
      , ( AlignCenter , ColWidthDefault )
      , ( AlignLeft , ColWidthDefault )
      ]
      (TableHead
         ( "" , [] , [] )
         [ Row
             ( "" , [] , [] )
             [ Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Right" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Left" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Center" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Default" ] ]
             ]
         ])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "12" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "12" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "12" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "12" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "123" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "123" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "123" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "123" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1" ] ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Para [ Str "Multiline table with caption:" ]
  , Table
      ( "" , [] , [] )
      (Caption
         Nothing
         [ Plain
             [ Str "Here's the caption. It may span multiple lines." ]
         ])
      [ ( AlignCenter , ColWidth 0.2 )
      , ( AlignLeft , ColWidth 0.2 )
      , ( AlignRight , ColWidth 0.3 )
      , ( AlignLeft , ColWidth 0.3 )
      ]
      (TableHead
         ( "" , [] , [] )
         [ Row
             ( "" , [] , [] )
             [ Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Centered Header" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Left Aligned" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Right Aligned" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Default aligned" ] ]
             ]
         ])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "First" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "row" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "12.0" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain
                      [ Str
                          "Example of a row that spans multiple lines."
                      ]
                  ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "Second" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "row" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "5.0" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain
                      [ Str
                          "Here's another one. Note the blank line between rows."
                      ]
                  ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Para [ Str "Multiline table without caption:" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignCenter , ColWidth 0.1 )
      , ( AlignLeft , ColWidth 0.2 )
      , ( AlignRight , ColWidth 0.3 )
      , ( AlignLeft , ColWidth 0.4 )
      ]
      (TableHead
         ( "" , [] , [] )
         [ Row
             ( "" , [] , [] )
             [ Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Centered Header" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Left Aligned" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Right Aligned" ] ]
             , Cell
                 ( "" , [] , [] )
                 AlignDefault
                 (RowSpan 1)
                 (ColSpan 1)
                 [ Plain [ Str "Default aligned" ] ]
             ]
         ])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "First" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "row" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "12.0" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain
                      [ Str
                          "Example of a row that spans multiple lines."
                      ]
                  ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "Second" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "row" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "5.0" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain
                      [ Str
                          "Here's another one. Note the blank line between rows."
                      ]
                  ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Para [ Str "Table without column headers:" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignRight , ColWidthDefault )
      , ( AlignLeft , ColWidthDefault )
      , ( AlignCenter , ColWidthDefault )
      , ( AlignRight , ColWidthDefault )
      ]
      (TableHead ( "" , [] , [] ) [])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "12" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "12" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "12" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "12" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "123" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "123" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "123" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "123" ] ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "1" ] ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , Para [ Str "Multiline table without column headers:" ]
  , Table
      ( "" , [] , [] )
      (Caption Nothing [])
      [ ( AlignCenter , ColWidth 0.25 )
      , ( AlignLeft , ColWidth 0.25 )
      , ( AlignRight , ColWidth 0.25 )
      , ( AlignLeft , ColWidth 0.25 )
      ]
      (TableHead ( "" , [] , [] ) [])
      [ TableBody
          ( "" , [] , [] )
          (RowHeadColumns 0)
          []
          [ Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "First" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "row" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "12.0" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain
                      [ Str
                          "Example of a row that spans multiple lines."
                      ]
                  ]
              ]
          , Row
              ( "" , [] , [] )
              [ Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "Second" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "row" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain [ Str "5.0" ] ]
              , Cell
                  ( "" , [] , [] )
                  AlignDefault
                  (RowSpan 1)
                  (ColSpan 1)
                  [ Plain
                      [ Str
                          "Here's another one. Note the blank line between rows."
                      ]
                  ]
              ]
          ]
      ]
      (TableFoot ( "" , [] , [] ) [])
  , BulletList
      [ [ Para [ Str "A Step" ] ]
      , [ Para [ Str "Another Step" ]
        , Para [ Str "Substeps can be nested indefinitely deep." ]
        ]
      , [ Para [ Str "A Final Step" ] ]
      ]
  ]
